"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7699],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=p(r),m=a,d=f["".concat(u,".").concat(m)]||f[m]||c[m]||o;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7278:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={sidebar_position:7},u="GraphQL",p={unversionedId:"shakudo-platform-features/API/gql",id:"shakudo-platform-features/API/gql",title:"GraphQL",description:"Submit a GraphQL query using graphql_operations() function.",source:"@site/docs/shakudo-platform-features/API/gql.md",sourceDirName:"shakudo-platform-features/API",slug:"/shakudo-platform-features/API/gql",permalink:"/shakudo-platform-features/API/gql",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Utils",permalink:"/shakudo-platform-features/API/utils"},next:{title:"NLP models",permalink:"/shakudo-platform-features/API/nlp"}},s={},c=[],f={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"graphql"},"GraphQL"),(0,o.kt)("p",null,"Submit a GraphQL query using ",(0,o.kt)("inlineCode",{parentName:"p"},"graphql_operations()")," function."),(0,o.kt)("p",null,"Example for submitting a job"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'gql_query = \'\'\'    \n  mutation {\n      createShakudoPipelineJob(\n          jobName: "unruffled_ardinghelli",\n          jobType: "basic",\n          timeout: 1800,\n          activeTimeout: 1800,\n          maxRetries: 2,\n          pipelineYamlPath: "yaml_path.yaml",\n          defaultCommands: true,\n          gitInit: true,\n          commitId: "",\n          branchName: "",\n          parameters: { create: [\n            { key: "a", value: "1" },\n              ]}  \n      ) {\n          id\n          jobName\n          schedule\n          parameters {\n              key\n              value\n          }\n          noGitInit\n          noHyperplaneCommands\n      }\n  }\n  \'\'\'\n  gql_queries = [gql_query]\n  results = await nc.graphql_operation(gql_queries)\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," Parameters ")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"gql_queries ",(0,o.kt)("div",{class:"label basic required"},"Required")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Union[str, List","[str]","]"),(0,o.kt)("td",{parentName:"tr",align:"left"},"GraphQL query for relevant operation")))))}m.isMDXComponent=!0}}]);