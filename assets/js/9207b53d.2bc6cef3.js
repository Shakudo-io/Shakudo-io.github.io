"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4730],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return d}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(a),d=i,k=m["".concat(o,".").concat(d)]||m[d]||c[d]||l;return a?n.createElement(k,r(r({ref:t},p),{},{components:a})):n.createElement(k,r({ref:t},p))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var u=2;u<l;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2345:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var n=a(7462),i=a(3366),l=(a(7294),a(3905)),r=["components"],s={},o="Persistent Volumes",u={unversionedId:"developer-docs/features/persistent-volumes",id:"developer-docs/features/persistent-volumes",title:"Persistent Volumes",description:"Overview",source:"@site/docs/developer-docs/features/persistent-volumes.md",sourceDirName:"developer-docs/features",slug:"/developer-docs/features/persistent-volumes",permalink:"/developer-docs/features/persistent-volumes",draft:!1,tags:[],version:"current",lastUpdatedBy:"chyuen-devsentient",lastUpdatedAt:1760986571,formattedLastUpdatedAt:"10/20/2025",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Outbound Traffic Access",permalink:"/developer-docs/features/outbound-traffic-access"},next:{title:"Plugins Panel",permalink:"/developer-docs/features/plugins"}},p={},c=[{value:"Overview",id:"overview",level:2},{value:"Access &amp; Location",id:"access--location",level:2},{value:"Key Capabilities",id:"key-capabilities",level:2},{value:"View Persistent Volume Claims",id:"view-persistent-volume-claims",level:3},{value:"Monitor Storage Usage",id:"monitor-storage-usage",level:3},{value:"Resize Persistent Volumes",id:"resize-persistent-volumes",level:3},{value:"Filter and Search",id:"filter-and-search",level:3},{value:"Track Pod Usage",id:"track-pod-usage",level:3},{value:"User Interface",id:"user-interface",level:2},{value:"Main View",id:"main-view",level:3},{value:"Dialogs &amp; Modals",id:"dialogs--modals",level:3},{value:"Tables &amp; Data Grids",id:"tables--data-grids",level:3},{value:"Technical Details",id:"technical-details",level:2},{value:"API Operations",id:"api-operations",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"Data Flow",id:"data-flow",level:3},{value:"State Management",id:"state-management",level:3},{value:"Special Considerations",id:"special-considerations",level:3},{value:"Common Workflows",id:"common-workflows",level:2},{value:"View Storage Capacity Across Cluster",id:"view-storage-capacity-across-cluster",level:3},{value:"Check Storage Usage for a Specific Volume",id:"check-storage-usage-for-a-specific-volume",level:3},{value:"Expand a Volume That&#39;s Running Out of Space",id:"expand-a-volume-thats-running-out-of-space",level:3},{value:"Identify Unused Volumes for Cleanup",id:"identify-unused-volumes-for-cleanup",level:3},{value:"Troubleshoot Storage Issues",id:"troubleshoot-storage-issues",level:3},{value:"Filter PVCs by Namespace for Team-Specific Review",id:"filter-pvcs-by-namespace-for-team-specific-review",level:3},{value:"Related Features",id:"related-features",level:2},{value:"Notes &amp; Tips",id:"notes--tips",level:2},{value:"General Usage",id:"general-usage",level:3},{value:"Resize Considerations",id:"resize-considerations",level:3},{value:"Storage Usage Metrics",id:"storage-usage-metrics",level:3},{value:"Search and Filter Tips",id:"search-and-filter-tips",level:3},{value:"Performance",id:"performance",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3}],m={toc:c};function d(e){var t=e.components,a=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"persistent-volumes"},"Persistent Volumes"),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"The Persistent Volumes panel provides comprehensive management of Kubernetes Persistent Volume Claims (PVCs) across all namespaces in the cluster. This feature enables administrators to view, monitor, and resize storage volumes used by applications and services running on the platform. It displays real-time storage usage metrics, identifies which pods are using each volume, and allows for dynamic volume expansion without service disruption."),(0,l.kt)("h2",{id:"access--location"},"Access & Location"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Route"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"?panel=persistent-volumes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Navigation"),": Kubernetes Resources \u2192 Persistent Volumes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Access Requirements"),": dashboard-admin role"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Feature Flags"),": None")),(0,l.kt)("h2",{id:"key-capabilities"},"Key Capabilities"),(0,l.kt)("h3",{id:"view-persistent-volume-claims"},"View Persistent Volume Claims"),(0,l.kt)("p",null,"Browse all PVCs across all namespaces with detailed information including name, namespace, size, storage class, status, and associated pods. The main view displays PVCs in a card-based layout with color-coded status indicators and key metadata at a glance."),(0,l.kt)("h3",{id:"monitor-storage-usage"},"Monitor Storage Usage"),(0,l.kt)("p",null,"View real-time storage usage statistics for each PVC, including total capacity, used space, available space, and usage percentage. Usage metrics are retrieved from Prometheus and displayed with visual indicators (progress bars) that change color based on utilization thresholds (green: <70%, yellow: 70-90%, red: >90%)."),(0,l.kt)("h3",{id:"resize-persistent-volumes"},"Resize Persistent Volumes"),(0,l.kt)("p",null,"Dynamically expand PVC storage capacity without downtime. The feature validates resize requests to ensure only size increases are allowed (volume shrinking is not supported by Kubernetes) and provides real-time feedback during the resize operation."),(0,l.kt)("h3",{id:"filter-and-search"},"Filter and Search"),(0,l.kt)("p",null,"Filter PVCs by namespace or status, and search across multiple fields including PVC name, namespace, status, and storage class. Advanced sorting capabilities allow ordering by name, namespace, status, size, or creation date in ascending or descending order."),(0,l.kt)("h3",{id:"track-pod-usage"},"Track Pod Usage"),(0,l.kt)("p",null,"Identify which pods are currently using each PVC, helping with dependency analysis, cleanup decisions, and capacity planning. The interface shows a count of pods using each volume and provides detailed pod names in the details view."),(0,l.kt)("h2",{id:"user-interface"},"User Interface"),(0,l.kt)("h3",{id:"main-view"},"Main View"),(0,l.kt)("p",null,"The main panel displays PVCs as interactive cards in a paginated list. Each card shows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Avatar"),": Color-coded avatar with the first letter of the PVC name"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Name"),": Full PVC name"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Namespace"),": Namespace chip (outlined style)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Status"),": Color-coded status chip (green for Bound, yellow for Pending, red for Lost)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Storage Size"),': Allocated capacity (e.g., "10Gi")'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Storage Class"),': Type of storage (e.g., "local-path", "standard")'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Pod Count"),": Number of pods currently using the volume"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Creation Date"),": When the PVC was created")),(0,l.kt)("p",null,"The interface includes a comprehensive control panel with:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Filter Section"),": Dropdowns to filter by namespace and status"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Sort Section"),": Dropdown to select sort field (Name, Namespace, Status, Size, Created) with toggle button for ascending/descending order"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Search Bar"),": Text input with live search across name, namespace, status, and storage class"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Action Buttons"),": Reset filters button (appears when filters are active) and refresh button to reload data"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Result Counter"),": Shows current page results, filtered total, and grand total")),(0,l.kt)("h3",{id:"dialogs--modals"},"Dialogs & Modals"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"PVC Details Dialog"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Purpose: Display comprehensive information about a selected PVC and enable resize operations"),(0,l.kt)("li",{parentName:"ul"},"Triggered by: Clicking on any PVC card in the main view"),(0,l.kt)("li",{parentName:"ul"},"Sections:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Basic Information"),": Name, namespace, status, size, storage class, creation timestamp"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Pod Usage"),": List of all pods currently mounting this PVC"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Storage Usage"),": Real-time usage statistics from Prometheus (if available)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Total capacity vs. used space"),(0,l.kt)("li",{parentName:"ul"},"Visual progress bar with color coding"),(0,l.kt)("li",{parentName:"ul"},"Available space calculation"),(0,l.kt)("li",{parentName:"ul"},"Source pod from which metrics were collected"),(0,l.kt)("li",{parentName:"ul"},"Special note for local-path storage explaining that metrics reflect node filesystem usage"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Resize PVC"),": Interface to expand volume capacity"))),(0,l.kt)("li",{parentName:"ul"},"Fields:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"New Size"),': Text input accepting Kubernetes size formats (e.g., "20Gi", "500Mi", "2Ti")'),(0,l.kt)("li",{parentName:"ul"},"Real-time validation to ensure new size is larger than current size"),(0,l.kt)("li",{parentName:"ul"},"Helper text with format examples and validation errors"))),(0,l.kt)("li",{parentName:"ul"},"Actions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Resize PVC"),": Submit button (disabled until valid size is entered)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Close"),": Dismiss dialog without changes")))))),(0,l.kt)("h3",{id:"tables--data-grids"},"Tables & Data Grids"),(0,l.kt)("p",null,"The main view uses a card-based layout rather than a traditional table, providing:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Columns")," (displayed as card metadata):",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Name (with avatar)"),(0,l.kt)("li",{parentName:"ul"},"Namespace (chip)"),(0,l.kt)("li",{parentName:"ul"},"Status (colored chip)"),(0,l.kt)("li",{parentName:"ul"},"Storage Size (icon + text)"),(0,l.kt)("li",{parentName:"ul"},"Storage Class (icon + text)"),(0,l.kt)("li",{parentName:"ul"},"Pod Count (icon + text)"),(0,l.kt)("li",{parentName:"ul"},"Created Date (icon + formatted date)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Actions"),": Click any card to open the details dialog"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Filtering"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Namespace filter (dropdown with all unique namespaces)"),(0,l.kt)("li",{parentName:"ul"},"Status filter (dropdown with all unique statuses)"),(0,l.kt)("li",{parentName:"ul"},"Global search (searches across name, namespace, status, storage class)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Sorting"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Sort by Name, Namespace, Status, Size, or Created date"),(0,l.kt)("li",{parentName:"ul"},"Toggle between ascending and descending order"),(0,l.kt)("li",{parentName:"ul"},"Proper numeric sorting for sizes (converts to bytes for accurate comparison)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Pagination"),": 20 items per page with first/last/prev/next navigation")),(0,l.kt)("h2",{id:"technical-details"},"Technical Details"),(0,l.kt)("h3",{id:"api-operations"},"API Operations"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Endpoints:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GET /api/pvcs/list")," - Retrieve all PVCs across all namespaces with pod usage information"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"POST /api/pvcs/usage")," - Get real-time storage usage metrics for a specific PVC from Prometheus"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"POST /api/pvcs/resize")," - Resize a PVC by updating its storage request")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Authentication:"),"\nAll API endpoints require:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Bearer token authentication (Keycloak JWT)"),(0,l.kt)("li",{parentName:"ul"},"dashboard-admin role authorization")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"List PVCs Operation:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Queries Kubernetes API for all PVCs across namespaces"),(0,l.kt)("li",{parentName:"ul"},"Queries all pods to determine PVC usage relationships"),(0,l.kt)("li",{parentName:"ul"},"Returns array of PVC objects with metadata and associated pod names"),(0,l.kt)("li",{parentName:"ul"},"Response includes: name, namespace, size, storageClass, status, volumeName, created, usingPods, podCount")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Usage Metrics Operation:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Accepts PVC name and namespace as parameters"),(0,l.kt)("li",{parentName:"ul"},"Finds pods currently using the PVC"),(0,l.kt)("li",{parentName:"ul"},"Queries Prometheus for volume statistics:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Primary metrics: ",(0,l.kt)("inlineCode",{parentName:"li"},"kubelet_volume_stats_used_bytes")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"kubelet_volume_stats_capacity_bytes")),(0,l.kt)("li",{parentName:"ul"},"Fallback metrics: ",(0,l.kt)("inlineCode",{parentName:"li"},"container_fs_usage_bytes")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"container_fs_limit_bytes")))),(0,l.kt)("li",{parentName:"ul"},"Calculates available space and usage percentage"),(0,l.kt)("li",{parentName:"ul"},"Formats bytes to human-readable units (B, Ki, Mi, Gi, Ti)"),(0,l.kt)("li",{parentName:"ul"},"Returns null usage with informative message if metrics unavailable")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Resize Operation:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Accepts PVC name, namespace, and new size"),(0,l.kt)("li",{parentName:"ul"},"Reads current PVC specification from Kubernetes"),(0,l.kt)("li",{parentName:"ul"},"Updates only the storage request field"),(0,l.kt)("li",{parentName:"ul"},"Applies the change using Kubernetes API replace operation"),(0,l.kt)("li",{parentName:"ul"},"Frontend validates size increase before allowing submission")),(0,l.kt)("h3",{id:"component-structure"},"Component Structure"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Main Component: ",(0,l.kt)("inlineCode",{parentName:"li"},"components/PVCs/PVCPanel.tsx")),(0,l.kt)("li",{parentName:"ul"},"Table Component: ",(0,l.kt)("inlineCode",{parentName:"li"},"components/PVCs/PVCTable.tsx")),(0,l.kt)("li",{parentName:"ul"},"Dialog Component: ",(0,l.kt)("inlineCode",{parentName:"li"},"components/PVCs/PVCDetailsDialog.tsx")),(0,l.kt)("li",{parentName:"ul"},"Hook: ",(0,l.kt)("inlineCode",{parentName:"li"},"hooks/usePVCs.ts")),(0,l.kt)("li",{parentName:"ul"},"API Routes:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pages/api/pvcs/list.ts")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pages/api/pvcs/usage.ts")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pages/api/pvcs/resize.ts")))),(0,l.kt)("li",{parentName:"ul"},"Utilities: ",(0,l.kt)("inlineCode",{parentName:"li"},"utils/sizeUtils.ts")," (size parsing and validation)")),(0,l.kt)("h3",{id:"data-flow"},"Data Flow"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Initial Load"),": PVCPanel mounts \u2192 usePVCs hook triggers \u2192 API call to /api/pvcs/list \u2192 Kubernetes API queries PVCs and Pods \u2192 Data processed and returned"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Usage Metrics"),": User clicks PVC card \u2192 PVCDetailsDialog opens \u2192 API call to /api/pvcs/usage \u2192 Prometheus queries \u2192 Usage data displayed"),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Resize"),": User enters new size \u2192 Validation occurs \u2192 Resize button clicked \u2192 API call to /api/pvcs/resize \u2192 Kubernetes API updates PVC \u2192 Success notification \u2192 Dialog closes")),(0,l.kt)("h3",{id:"state-management"},"State Management"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Local State"),": React hooks manage component-level state (search, filters, sorting, pagination, dialog open/close)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Data Fetching"),": Custom ",(0,l.kt)("inlineCode",{parentName:"li"},"usePVCs")," hook handles API calls with loading, error, and refetch capabilities"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Dialog State"),": Separate state for resize operation status, usage loading, and error messages"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Abort Controllers"),": Used to prevent memory leaks by canceling in-flight requests when components unmount")),(0,l.kt)("h3",{id:"special-considerations"},"Special Considerations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Local-Path Storage"),": Special handling and user notification that usage metrics for local-path storage reflect entire node filesystem, not just the PVC"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Size Validation"),": Frontend validates that new size is greater than current size using byte conversion for accurate comparison"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Prometheus Metrics"),": Graceful degradation if Prometheus is unavailable or metrics not collected"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Memory Leak Prevention"),": Abort controllers and mounted refs prevent state updates after component unmounts"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Pod Status"),": Usage metrics only available from running pods; appropriate messaging for stopped/pending pods")),(0,l.kt)("h2",{id:"common-workflows"},"Common Workflows"),(0,l.kt)("h3",{id:"view-storage-capacity-across-cluster"},"View Storage Capacity Across Cluster"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Navigate to Persistent Volumes panel"),(0,l.kt)("li",{parentName:"ol"},"Review the list of all PVCs with their sizes and statuses"),(0,l.kt)("li",{parentName:"ol"},"Use namespace filter to focus on specific applications"),(0,l.kt)("li",{parentName:"ol"},"Sort by size to identify largest volumes"),(0,l.kt)("li",{parentName:"ol"},"Review pod count to understand utilization")),(0,l.kt)("h3",{id:"check-storage-usage-for-a-specific-volume"},"Check Storage Usage for a Specific Volume"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Locate the PVC in the main list (use search if needed)"),(0,l.kt)("li",{parentName:"ol"},"Click on the PVC card to open details dialog"),(0,l.kt)("li",{parentName:"ol"},"View the Storage Usage section"),(0,l.kt)("li",{parentName:"ol"},"Check the usage percentage and visual progress bar"),(0,l.kt)("li",{parentName:"ol"},"Note available space and consider resize if needed")),(0,l.kt)("h3",{id:"expand-a-volume-thats-running-out-of-space"},"Expand a Volume That's Running Out of Space"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Open the PVC details dialog for the target volume"),(0,l.kt)("li",{parentName:"ol"},"Review current usage in the Storage Usage section"),(0,l.kt)("li",{parentName:"ol"},"Scroll to the Resize PVC section"),(0,l.kt)("li",{parentName:"ol"},'Enter new size larger than current (e.g., if current is "10Gi", enter "20Gi")'),(0,l.kt)("li",{parentName:"ol"},"Verify that validation passes (no error shown)"),(0,l.kt)("li",{parentName:"ol"},'Click "Resize PVC" button'),(0,l.kt)("li",{parentName:"ol"},"Wait for confirmation notification"),(0,l.kt)("li",{parentName:"ol"},"Close dialog and monitor the PVC status")),(0,l.kt)("h3",{id:"identify-unused-volumes-for-cleanup"},"Identify Unused Volumes for Cleanup"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Review the PVC list in the main panel"),(0,l.kt)("li",{parentName:"ol"},"Look for PVCs with pod count of 0"),(0,l.kt)("li",{parentName:"ol"},"Click on suspected unused PVCs to verify no pods listed"),(0,l.kt)("li",{parentName:"ol"},"Note: This panel provides viewing only; deletion requires other tools or kubectl")),(0,l.kt)("h3",{id:"troubleshoot-storage-issues"},"Troubleshoot Storage Issues"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Search for the problematic PVC using the search bar"),(0,l.kt)("li",{parentName:"ol"},"Open details dialog to check status"),(0,l.kt)("li",{parentName:"ol"},"Review which pods are using the volume"),(0,l.kt)("li",{parentName:"ol"},"Check storage usage metrics if pod is running"),(0,l.kt)("li",{parentName:"ol"},"Verify storage class for provisioner issues"),(0,l.kt)("li",{parentName:"ol"},"Check creation timestamp for age-related issues")),(0,l.kt)("h3",{id:"filter-pvcs-by-namespace-for-team-specific-review"},"Filter PVCs by Namespace for Team-Specific Review"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Use the namespace dropdown filter in the control panel"),(0,l.kt)("li",{parentName:"ol"},'Select the target namespace (e.g., "hyperplane-pipelines", "hyperplane-jhub")'),(0,l.kt)("li",{parentName:"ol"},"Review all PVCs in that namespace"),(0,l.kt)("li",{parentName:"ol"},"Sort by size or creation date as needed"),(0,l.kt)("li",{parentName:"ol"},'Use "Reset all filters" to return to full view')),(0,l.kt)("h2",{id:"related-features"},"Related Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Job Management - Many jobs create temporary PVCs for data persistence"),(0,l.kt)("li",{parentName:"ul"},"Session Management - JupyterHub sessions use PVCs for user workspaces"),(0,l.kt)("li",{parentName:"ul"},"Microservices - Some microservices may mount PVCs for data storage"),(0,l.kt)("li",{parentName:"ul"},"Stack Components - Database and storage components create PVCs")),(0,l.kt)("h2",{id:"notes--tips"},"Notes & Tips"),(0,l.kt)("h3",{id:"general-usage"},"General Usage"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Bound Status"),": Indicates the PVC is successfully attached to a Persistent Volume and ready for use"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Pending Status"),": Usually means the provisioner is creating the volume or waiting for resources"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Lost Status"),": Indicates the underlying storage has been lost or is unavailable")),(0,l.kt)("h3",{id:"resize-considerations"},"Resize Considerations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"One-Way Operation"),": PVCs can only be expanded, never shrunk. Plan capacity increases carefully."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Storage Class Support"),": Not all storage classes support volume expansion. Check the ",(0,l.kt)("inlineCode",{parentName:"li"},"allowVolumeExpansion")," field in the StorageClass."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"File System Expansion"),": After PVC resize, the pod may need to be restarted for the file system to recognize the new capacity."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Validation"),': The UI validates size increases before submission, converting sizes to bytes for accurate comparison (e.g., recognizes that "10Gi" < "10000Mi").')),(0,l.kt)("h3",{id:"storage-usage-metrics"},"Storage Usage Metrics"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Prometheus Required"),": Usage statistics require Prometheus to be deployed and collecting kubelet metrics."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Running Pods Only"),": Metrics are only available when at least one pod mounting the PVC is in Running state."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Local-Path Note"),": For local-path storage, usage shows the entire node's filesystem usage, not just the PVC, since local-path uses a directory on the node rather than a dedicated volume."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Metric Collection Delay"),": Newly created PVCs may not show usage immediately; allow a few minutes for metrics to populate.")),(0,l.kt)("h3",{id:"search-and-filter-tips"},"Search and Filter Tips"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Global Search"),": Searches across multiple fields simultaneously (name, namespace, status, storage class)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Combined Filters"),": Use multiple filters together (e.g., namespace + status + search) for precise results"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Reset Filters"),": Click the reset button to quickly return to unfiltered view"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Pagination"),": Results are paginated at 20 per page; filters reset to page 1 when changed")),(0,l.kt)("h3",{id:"performance"},"Performance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Large Clusters"),": For clusters with hundreds of PVCs, initial load may take several seconds"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Refresh Button"),": Use the refresh button to reload data after making changes outside the UI"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Responsive Design"),": The interface adapts to mobile and tablet screens with adjusted layouts")),(0,l.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Usage Metrics Not Available"),": Check that Prometheus is running and that kubelet metrics are being scraped"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Resize Fails"),": Verify the storage class supports volume expansion and check Kubernetes events for detailed error messages"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Empty List"),": Ensure you have dashboard-admin role and that PVCs exist in the cluster")))}d.isMDXComponent=!0}}]);