"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2377],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return d}});var i=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=i.createContext({}),c=function(e){var t=i.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(a),d=n,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return a?i.createElement(k,l(l({ref:t},p),{},{components:a})):i.createElement(k,l({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9496:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var i=a(7462),n=a(3366),r=(a(7294),a(3905)),l=["components"],o={},s="Microservices (Services Panel)",c={unversionedId:"developer-docs/features/services",id:"developer-docs/features/services",title:"Microservices (Services Panel)",description:"Overview",source:"@site/docs/developer-docs/features/services.md",sourceDirName:"developer-docs/features",slug:"/developer-docs/features/services",permalink:"/developer-docs/features/services",draft:!1,tags:[],version:"current",lastUpdatedBy:"yevgeniy-ds",lastUpdatedAt:1761081717,formattedLastUpdatedAt:"10/21/2025",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Service Accounts",permalink:"/developer-docs/features/service-accounts"},next:{title:"Sessions",permalink:"/developer-docs/features/sessions"}},p={},u=[{value:"Overview",id:"overview",level:2},{value:"Access &amp; Location",id:"access--location",level:2},{value:"Key Capabilities",id:"key-capabilities",level:2},{value:"Create Microservices",id:"create-microservices",level:3},{value:"Manage Service Lifecycle",id:"manage-service-lifecycle",level:3},{value:"Configure Service Networking",id:"configure-service-networking",level:3},{value:"Health Monitoring &amp; Alerting",id:"health-monitoring--alerting",level:3},{value:"User Interface",id:"user-interface",level:2},{value:"Main View",id:"main-view",level:3},{value:"Dialogs &amp; Modals",id:"dialogs--modals",level:3},{value:"Tables &amp; Data Grids",id:"tables--data-grids",level:3},{value:"Technical Details",id:"technical-details",level:2},{value:"GraphQL Operations",id:"graphql-operations",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"State Management",id:"state-management",level:3},{value:"Common Workflows",id:"common-workflows",level:2},{value:"Deploy a New Microservice",id:"deploy-a-new-microservice",level:3},{value:"Clone and Modify an Existing Service",id:"clone-and-modify-an-existing-service",level:3},{value:"Scale a Running Service",id:"scale-a-running-service",level:3},{value:"Stop and Start a Service",id:"stop-and-start-a-service",level:3},{value:"Monitor Service Health and Debug Issues",id:"monitor-service-health-and-debug-issues",level:3},{value:"Configure Public Webhook Endpoints",id:"configure-public-webhook-endpoints",level:3},{value:"Edit Service Configuration",id:"edit-service-configuration",level:3},{value:"Related Features",id:"related-features",level:2},{value:"Notes &amp; Tips",id:"notes--tips",level:2}],m={toc:u};function d(e){var t=e.components,a=(0,n.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"microservices-services-panel"},"Microservices (Services Panel)"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The Services panel provides comprehensive management capabilities for deploying and maintaining long-running microservices on the Shakudo platform. This feature enables users to deploy containerized applications with custom endpoints, configure autoscaling, set up health monitoring, and manage the complete lifecycle of production-ready services. Microservices differ from regular pipeline jobs by running continuously with exposed network ports, horizontal pod autoscaling, and dedicated endpoints for external access."),(0,r.kt)("h2",{id:"access--location"},"Access & Location"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Route"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"?panel=services")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Navigation"),": Workloads \u2192 Microservices"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Access Requirements"),": None (basic user access)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Feature Flags"),": None")),(0,r.kt)("h2",{id:"key-capabilities"},"Key Capabilities"),(0,r.kt)("h3",{id:"create-microservices"},"Create Microservices"),(0,r.kt)("p",null,"Deploy new long-running services with customizable configurations including environment settings, Git integration, networking options, and resource scaling. Services can be created from scratch, cloned from existing services, or deployed from custom pod specifications."),(0,r.kt)("h3",{id:"manage-service-lifecycle"},"Manage Service Lifecycle"),(0,r.kt)("p",null,"Control running microservices with operations including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Start/stop services (scaling to 0 replicas)"),(0,r.kt)("li",{parentName:"ul"},"Restart services to apply configuration changes"),(0,r.kt)("li",{parentName:"ul"},"Scale services manually or configure horizontal pod autoscaling"),(0,r.kt)("li",{parentName:"ul"},"Monitor service health and replica status"),(0,r.kt)("li",{parentName:"ul"},"View real-time logs and Kubernetes events")),(0,r.kt)("h3",{id:"configure-service-networking"},"Configure Service Networking"),(0,r.kt)("p",null,"Set up external access through:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Custom subdomains for public access (e.g., ",(0,r.kt)("inlineCode",{parentName:"li"},"myservice.dev.hyperplane.dev"),")"),(0,r.kt)("li",{parentName:"ul"},"Subpath routing under the main domain"),(0,r.kt)("li",{parentName:"ul"},"In-cluster service URLs for internal Kubernetes communication"),(0,r.kt)("li",{parentName:"ul"},"Public webhooks with special subdomain suffixes (",(0,r.kt)("inlineCode",{parentName:"li"},"-webhook"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"-public"),")"),(0,r.kt)("li",{parentName:"ul"},"URL rewriting and request routing options")),(0,r.kt)("h3",{id:"health-monitoring--alerting"},"Health Monitoring & Alerting"),(0,r.kt)("p",null,"Configure proactive monitoring with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Automatic health checks on exposed ports"),(0,r.kt)("li",{parentName:"ul"},"Configurable failure thresholds before alerting"),(0,r.kt)("li",{parentName:"ul"},"Integration with alert notification targets"),(0,r.kt)("li",{parentName:"ul"},"Cooldown periods between notifications"),(0,r.kt)("li",{parentName:"ul"},"Grafana integration for detailed metrics")),(0,r.kt)("h2",{id:"user-interface"},"User Interface"),(0,r.kt)("h3",{id:"main-view"},"Main View"),(0,r.kt)("p",null,"The Services panel presents two tabbed views for managing microservices:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Available Tab")," - Displays currently running and pending microservices with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Service status (healthy, not ready, off, failed)"),(0,r.kt)("li",{parentName:"ul"},"Replica counts (desired vs ready replicas)"),(0,r.kt)("li",{parentName:"ul"},"Scaling configuration (fixed replicas or HPA range)"),(0,r.kt)("li",{parentName:"ul"},"Public endpoint URLs with copy-to-clipboard"),(0,r.kt)("li",{parentName:"ul"},"In-cluster service URLs for Kubernetes access"),(0,r.kt)("li",{parentName:"ul"},"Quick access to logs, events, and service details")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"History Tab")," - Shows completed, failed, or stopped microservices with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Historical service records"),(0,r.kt)("li",{parentName:"ul"},"Completion times and durations"),(0,r.kt)("li",{parentName:"ul"},"Status reasons for failures"),(0,r.kt)("li",{parentName:"ul"},"Same filtering and search capabilities as Available tab")),(0,r.kt)("p",null,"Both views support:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Real-time filtering by status, name, owner, type, timeframe, and custom parameters"),(0,r.kt)("li",{parentName:"ul"},"Quick search across name, endpoint, pipeline path, ID, and author"),(0,r.kt)("li",{parentName:"ul"},"Pagination for large service lists"),(0,r.kt)("li",{parentName:"ul"},"Column customization and sorting"),(0,r.kt)("li",{parentName:"ul"},"Pin favorite services for quick access")),(0,r.kt)("h3",{id:"dialogs--modals"},"Dialogs & Modals"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Create/Edit/Clone Microservice Dialog")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Full-featured form for creating new services or modifying existing ones"),(0,r.kt)("li",{parentName:"ul"},"Sections:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"General Tab"),": Name, endpoint configuration, environment config, pipeline type (Shell/Multi-step), Git settings"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Advanced Tab"),": Worker config, autoscaling, failure alerts, Cloud SQL proxies, secrets, service accounts, billing projects"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Parameters Tab"),": Key-value parameters passed to the service"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Readme Tab"),": Markdown documentation for the service"))),(0,r.kt)("li",{parentName:"ul"},"Features:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Subdomain/subpath configuration with availability checking"),(0,r.kt)("li",{parentName:"ul"},"Environment config selection with resource specifications"),(0,r.kt)("li",{parentName:"ul"},"Git repository integration (branch/commit selection)"),(0,r.kt)("li",{parentName:"ul"},"Horizontal pod autoscaling (min/max replicas)"),(0,r.kt)("li",{parentName:"ul"},"Health check configuration with alert targets"),(0,r.kt)("li",{parentName:"ul"},"Custom pod YAML editing for advanced users"),(0,r.kt)("li",{parentName:"ul"},"GraphQL mutation preview"),(0,r.kt)("li",{parentName:"ul"},"Job summary panel with configuration overview"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Service Details Dialog")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Comprehensive view of a running or completed service"),(0,r.kt)("li",{parentName:"ul"},"Information: Full job metadata, configuration, logs, events, metrics"),(0,r.kt)("li",{parentName:"ul"},"Actions: Edit, clone, restart, scale, cancel operations"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Events and Logs Dialog")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: View Kubernetes pod events and container logs"),(0,r.kt)("li",{parentName:"ul"},"Features: Real-time log streaming, event history, container selection"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Scale Up/Down Dialog")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Adjust service replica counts"),(0,r.kt)("li",{parentName:"ul"},"Options: Start service (scale up), stop service (scale to 0), custom replica count"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Service Status Dialog")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Show detailed service condition information"),(0,r.kt)("li",{parentName:"ul"},"Details: Pod conditions, readiness status, health check results"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Customize Pod YAML Dialog")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Advanced users can directly edit the Kubernetes pod specification"),(0,r.kt)("li",{parentName:"ul"},"Features: YAML editor with validation, diff view for edited services, generate from form values")))),(0,r.kt)("h3",{id:"tables--data-grids"},"Tables & Data Grids"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Current Services Table (Available Tab)")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Display active and pending microservices"),(0,r.kt)("li",{parentName:"ul"},"Columns:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Actions: Dropdown menu with clone, edit, restart, scale, cancel options"),(0,r.kt)("li",{parentName:"ul"},"Name: Service name with pin button, start button (if off), and link to details"),(0,r.kt)("li",{parentName:"ul"},"Status: Visual status indicator (healthy, not ready, off, failed with reason)"),(0,r.kt)("li",{parentName:"ul"},"Scaling: Replica information (current/min/max with autoscaling indicator)"),(0,r.kt)("li",{parentName:"ul"},"Logs: Quick access to events/logs dialog and Grafana dashboard"),(0,r.kt)("li",{parentName:"ul"},"Endpoint: Public URL with copy button and iframe preview"),(0,r.kt)("li",{parentName:"ul"},"In-cluster URL: Internal Kubernetes service URL"),(0,r.kt)("li",{parentName:"ul"},"Ready Replicas: Number of healthy pods"),(0,r.kt)("li",{parentName:"ul"},"Port: Exposed service port"),(0,r.kt)("li",{parentName:"ul"},"ID: Unique service identifier"),(0,r.kt)("li",{parentName:"ul"},"Start Time: When service was started"),(0,r.kt)("li",{parentName:"ul"},"Hidden columns: Desired replicas, max replicas, env config, custom image URL, pipeline path, billing project, service account, Git branch/commit, owner, status reason"))),(0,r.kt)("li",{parentName:"ul"},"Actions:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Click name to view full details"),(0,r.kt)("li",{parentName:"ul"},"Pin/unpin services for favorites"),(0,r.kt)("li",{parentName:"ul"},"Start services that are scaled to 0"),(0,r.kt)("li",{parentName:"ul"},"Clone existing services with same configuration"),(0,r.kt)("li",{parentName:"ul"},"Edit service configuration (creates new version)"),(0,r.kt)("li",{parentName:"ul"},"Restart services to apply changes"),(0,r.kt)("li",{parentName:"ul"},"Scale services up/down"),(0,r.kt)("li",{parentName:"ul"},"Cancel/delete services"))),(0,r.kt)("li",{parentName:"ul"},"Filtering:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Quick search across multiple fields"),(0,r.kt)("li",{parentName:"ul"},'Status filter (with "off" option for stopped services)'),(0,r.kt)("li",{parentName:"ul"},"Owner/user filter"),(0,r.kt)("li",{parentName:"ul"},"Type/environment config filter"),(0,r.kt)("li",{parentName:"ul"},"Custom parameter filters"),(0,r.kt)("li",{parentName:"ul"},"Timeframe filters"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Past Services Table (History Tab)")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Purpose: Display historical microservice records"),(0,r.kt)("li",{parentName:"ul"},"Columns: Similar to Current Services, with additional completion time and duration"),(0,r.kt)("li",{parentName:"ul"},"Filtering: Same filtering capabilities as Current Services"),(0,r.kt)("li",{parentName:"ul"},"Actions: View details, clone (recreate with same config)")))),(0,r.kt)("h2",{id:"technical-details"},"Technical Details"),(0,r.kt)("h3",{id:"graphql-operations"},"GraphQL Operations"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Queries:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GetServices")," - Retrieves paginated list of microservices with filtering and sorting",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Filters by status (in progress/pending for current, completed/failed for past)"),(0,r.kt)("li",{parentName:"ul"},"Includes replica counts, scaling configuration, endpoints"),(0,r.kt)("li",{parentName:"ul"},"Returns port, timeout=-1, activeTimeout=-1 (identifies as service vs job)"),(0,r.kt)("li",{parentName:"ul"},"Supports filtering by user, group, billing project, parameters, Git details"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GetUserServicePodSpec")," - Generates Kubernetes pod specification from form inputs"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IsUserServiceUrlAvailable")," - Validates subdomain/subpath availability before creation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IsPipelineJobYamlEdited")," - Checks if service YAML has been manually customized"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CountJobs")," - Returns total count for pagination")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Mutations:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CreateService")," (createPipelineJobWithAlerting) - Creates new microservice",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Sets timeout=-1 and activeTimeout=-1 (distinguishes from regular jobs)"),(0,r.kt)("li",{parentName:"ul"},"Sets exposedPort to enable network access"),(0,r.kt)("li",{parentName:"ul"},"Configures minReplicas/maxHpaRange for autoscaling"),(0,r.kt)("li",{parentName:"ul"},"Supports notification targets for health alerts"),(0,r.kt)("li",{parentName:"ul"},"Accepts custom pod YAML or generates from form"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"EditService")," (editMicroserviceWithAlerting) - Updates existing microservice",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Can modify all service parameters"),(0,r.kt)("li",{parentName:"ul"},"Returns whether service was automatically restarted"),(0,r.kt)("li",{parentName:"ul"},"Changes to core config (image, YAML path) trigger restart"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RestartService")," - Restarts service pods to apply configuration changes"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CancelService")," - Stops and deletes the microservice"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"UpdateServiceReplicas")," (ScaleService) - Adjusts min/max replica counts for scaling"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PinJob")," - Pins/unpins service for quick access")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Subscriptions:"),"\nNone (uses polling via refetch for real-time updates)"),(0,r.kt)("h3",{id:"component-structure"},"Component Structure"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Main Component: ",(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/ServicesPanel.tsx")),(0,r.kt)("li",{parentName:"ul"},"Service Dialog: ",(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/ServiceDialog.tsx")),(0,r.kt)("li",{parentName:"ul"},"Tables:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/Tables/CurrentServicesTable.tsx")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/Tables/PastServicesTable.tsx")))),(0,r.kt)("li",{parentName:"ul"},"Table Toolbar: ",(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/ServicesTableToolbar.tsx")),(0,r.kt)("li",{parentName:"ul"},"Action Menu: ",(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/ServicesActionMenu.tsx")," (inferred)"),(0,r.kt)("li",{parentName:"ul"},"Supporting Dialogs:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/ServiceCreateFromSpecDialog.tsx")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/EditServiceYamlDiffModal.tsx")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/ServicesStatusDialog.tsx")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/Services/ScaleUpDownDialogContainer.tsx")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/components/Jobs/shared/EventsAndLogsDialog.tsx"))))),(0,r.kt)("h3",{id:"state-management"},"State Management"),(0,r.kt)("p",null,"The panel uses Jotai atoms for state management:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServicesPanelSectionAtom")," - Current view (table/create/clone/edit/details)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServicesCloneDefaultValuesAtom")," - Values when cloning a service"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServiceIdToShowAtom")," - ID of service to display in details"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServicesDetailsValueAtom")," - Cached service details"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CurrentServicesAtom")," / ",(0,r.kt)("inlineCode",{parentName:"li"},"PastServicesAtom")," - Service data for each tab"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CurrentServicesTablePageAtom")," / ",(0,r.kt)("inlineCode",{parentName:"li"},"PastServicesTablePageAtom")," - Pagination state"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CurrentServicesFiltersAtom")," / ",(0,r.kt)("inlineCode",{parentName:"li"},"PastServicesFiltersAtom")," - Active filters"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"CurrentServicesDataLoadingAtom")," / ",(0,r.kt)("inlineCode",{parentName:"li"},"PastServicesDataLoadingAtom")," - Loading state"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ServicesTableTabAtom")," - Active tab (0=Available, 1=History)")),(0,r.kt)("p",null,"Filters persist in URL query parameters for bookmarking and sharing."),(0,r.kt)("h2",{id:"common-workflows"},"Common Workflows"),(0,r.kt)("h3",{id:"deploy-a-new-microservice"},"Deploy a New Microservice"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Navigate to Workloads \u2192 Microservices"),(0,r.kt)("li",{parentName:"ol"},'Click "Create Microservice" button'),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"General Tab:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Enter a unique service name (alphanumeric with dashes/dots)"),(0,r.kt)("li",{parentName:"ul"},"Choose subdomain (recommended) or subpath for the endpoint"),(0,r.kt)("li",{parentName:"ul"},"Select an Environment Config (resource template)"),(0,r.kt)("li",{parentName:"ul"},"Choose pipeline type: Shell (single script) or Multi-step (YAML pipeline)"),(0,r.kt)("li",{parentName:"ul"},"Specify the path to your startup script or YAML"),(0,r.kt)("li",{parentName:"ul"},"Optionally configure Git repository, branch, and commit"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Advanced Tab (optional):"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Enable/disable default command execution"),(0,r.kt)("li",{parentName:"ul"},"Configure working directory"),(0,r.kt)("li",{parentName:"ul"},"Enable horizontal pod autoscaling with min/max replicas"),(0,r.kt)("li",{parentName:"ul"},"Set up failure alerts with notification targets"),(0,r.kt)("li",{parentName:"ul"},"Configure health check thresholds and cooldown periods"),(0,r.kt)("li",{parentName:"ul"},"Add Cloud SQL proxy for database connections"),(0,r.kt)("li",{parentName:"ul"},"Attach secrets and service accounts"),(0,r.kt)("li",{parentName:"ul"},"Select billing project for cost tracking"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Parameters Tab (optional):"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Add key-value parameters accessible to your service"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Readme Tab (optional):"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Add markdown documentation for the service"))),(0,r.kt)("li",{parentName:"ol"},'Click "Create Microservice" to deploy'),(0,r.kt)("li",{parentName:"ol"},"Service starts automatically and endpoint becomes available when healthy")),(0,r.kt)("h3",{id:"clone-and-modify-an-existing-service"},"Clone and Modify an Existing Service"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Find the service you want to clone in the Available or History tab"),(0,r.kt)("li",{parentName:"ol"},"Click the Actions menu (three dots) for the service"),(0,r.kt)("li",{parentName:"ol"},'Select "Clone"'),(0,r.kt)("li",{parentName:"ol"},"The create dialog opens with all values pre-filled from the original"),(0,r.kt)("li",{parentName:"ol"},"Modify any settings (name, endpoint, configuration, etc.)"),(0,r.kt)("li",{parentName:"ol"},'Click "Create Microservice" to deploy the cloned service'),(0,r.kt)("li",{parentName:"ol"},"Original service continues running unchanged")),(0,r.kt)("h3",{id:"scale-a-running-service"},"Scale a Running Service"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Locate the running service in the Available tab"),(0,r.kt)("li",{parentName:"ol"},'Check current scaling in the "Scaling" column'),(0,r.kt)("li",{parentName:"ol"},"Option A - Quick Scale via Actions Menu:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Click Actions \u2192 "Scale Up/Down"'),(0,r.kt)("li",{parentName:"ul"},"Enter new min/max replica counts"),(0,r.kt)("li",{parentName:"ul"},'Click "Scale" to apply'))),(0,r.kt)("li",{parentName:"ol"},"Option B - Enable Autoscaling via Edit:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Click Actions \u2192 "Edit"'),(0,r.kt)("li",{parentName:"ul"},"Navigate to Advanced tab"),(0,r.kt)("li",{parentName:"ul"},'Enable "Horizontal Pod Autoscaling"'),(0,r.kt)("li",{parentName:"ul"},"Set min and max replica counts"),(0,r.kt)("li",{parentName:"ul"},"Save changes (triggers restart)"))),(0,r.kt)("li",{parentName:"ol"},'Monitor the "Scaling" column for replica status updates')),(0,r.kt)("h3",{id:"stop-and-start-a-service"},"Stop and Start a Service"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To Stop a Service:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Find the running service in the Available tab"),(0,r.kt)("li",{parentName:"ol"},'Click Actions \u2192 "Scale Up/Down"'),(0,r.kt)("li",{parentName:"ol"},"Enter 0 for both min and max replicas"),(0,r.kt)("li",{parentName:"ol"},'Click "Scale"'),(0,r.kt)("li",{parentName:"ol"},'Service shows "off" status and stops consuming resources')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"To Start a Stopped Service:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},'Find the stopped service (shows "off" status)'),(0,r.kt)("li",{parentName:"ol"},"Click the start icon next to the service name, OR"),(0,r.kt)("li",{parentName:"ol"},'Click Actions \u2192 "Scale Up/Down"'),(0,r.kt)("li",{parentName:"ol"},"Enter desired replica count (e.g., min=1, max=1)"),(0,r.kt)("li",{parentName:"ol"},'Click "Scale"'),(0,r.kt)("li",{parentName:"ol"},"Service starts and endpoint becomes available when healthy")),(0,r.kt)("h3",{id:"monitor-service-health-and-debug-issues"},"Monitor Service Health and Debug Issues"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Find the service in the Available tab"),(0,r.kt)("li",{parentName:"ol"},"Check the Status column for health indicators:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'"healthy" - Service is running normally'),(0,r.kt)("li",{parentName:"ul"},'"not ready" - Service starting or pods not ready'),(0,r.kt)("li",{parentName:"ul"},'"off" - Service scaled to 0'),(0,r.kt)("li",{parentName:"ul"},'"failed" - Service encountered errors (hover for reason)'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"View Logs:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'Click the logs icon in the "Logs" column'),(0,r.kt)("li",{parentName:"ul"},'Select "Events" tab for Kubernetes events'),(0,r.kt)("li",{parentName:"ul"},'Select "Logs" tab for container output'),(0,r.kt)("li",{parentName:"ul"},"Use Grafana link for detailed metrics and dashboards"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"View Full Details:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Click on the service name"),(0,r.kt)("li",{parentName:"ul"},"Review complete configuration"),(0,r.kt)("li",{parentName:"ul"},"Check replica status and conditions"),(0,r.kt)("li",{parentName:"ul"},"View startup parameters and environment"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Common Issues:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},'"not ready" for extended time: Check logs for application errors'),(0,r.kt)("li",{parentName:"ul"},'"failed" status: Check status reason in hidden column or details'),(0,r.kt)("li",{parentName:"ul"},"0 ready replicas: Service may be crashing, check logs"),(0,r.kt)("li",{parentName:"ul"},"If issues persist, use Edit to adjust configuration or Restart to apply fixes")))),(0,r.kt)("h3",{id:"configure-public-webhook-endpoints"},"Configure Public Webhook Endpoints"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create new microservice or edit existing one"),(0,r.kt)("li",{parentName:"ol"},"In the General tab, configure the subdomain field:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"For webhook: use name ending in ",(0,r.kt)("inlineCode",{parentName:"li"},"-webhook")," (e.g., ",(0,r.kt)("inlineCode",{parentName:"li"},"payment-processor-webhook"),")"),(0,r.kt)("li",{parentName:"ul"},"For public service: use name ending in ",(0,r.kt)("inlineCode",{parentName:"li"},"-public")," (e.g., ",(0,r.kt)("inlineCode",{parentName:"li"},"api-public"),")"))),(0,r.kt)("li",{parentName:"ol"},"This makes the endpoint accessible without authentication"),(0,r.kt)("li",{parentName:"ol"},"Complete other configuration as needed"),(0,r.kt)("li",{parentName:"ol"},"After deployment, share the public URL with external services"),(0,r.kt)("li",{parentName:"ol"},"Note: Regular subdomains and subpaths require authentication")),(0,r.kt)("h3",{id:"edit-service-configuration"},"Edit Service Configuration"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Find the service to edit (can be in Available or History tab)"),(0,r.kt)("li",{parentName:"ol"},'Click Actions \u2192 "Edit"'),(0,r.kt)("li",{parentName:"ol"},"Modify desired settings in the edit dialog"),(0,r.kt)("li",{parentName:"ol"},'Review the "Customized YAML" badge if present (indicates manual YAML edits)'),(0,r.kt)("li",{parentName:"ol"},'Click "Save Changes"'),(0,r.kt)("li",{parentName:"ol"},"If configuration changes affect runtime (image, script, etc.), service automatically restarts"),(0,r.kt)("li",{parentName:"ol"},"Monitor status to confirm successful restart")),(0,r.kt)("h2",{id:"related-features"},"Related Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Immediate Jobs")," - One-time pipeline executions without exposed ports"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Scheduled Jobs")," - Recurring pipeline jobs that run on a schedule"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Environment Configs")," - Define resource templates and container images for services"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Stack Components")," - Pin frequently-used services for quick access"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Git Repositories")," - Sync code from Git servers for service deployment"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Billing Projects")," - Track costs and resource usage by project")),(0,r.kt)("h2",{id:"notes--tips"},"Notes & Tips"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Services vs Jobs"),": Microservices run continuously with ",(0,r.kt)("inlineCode",{parentName:"li"},"timeout=-1")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"activeTimeout=-1"),", while regular jobs have finite execution times. Services expose network ports; jobs typically don't."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Endpoint Configuration"),": Prefer subdomains over subpaths for better URL structure and routing. Subdomains provide cleaner URLs and avoid path conflicts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Public Endpoints"),": Services with subdomains ending in ",(0,r.kt)("inlineCode",{parentName:"li"},"-webhook")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"-public")," are accessible without authentication - useful for webhooks and public APIs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"In-cluster URLs"),": Use the in-cluster URL pattern ",(0,r.kt)("inlineCode",{parentName:"li"},"http://hyperplane-service-{id-prefix}.{namespace}.svc.cluster.local:8787")," for service-to-service communication within Kubernetes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Stopping Services"),": Scaling to 0 replicas stops the service but preserves configuration. This is useful for cost savings during periods of non-use."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Autoscaling"),": When HPA (Horizontal Pod Autoscaling) is enabled, Kubernetes automatically adjusts replicas based on CPU utilization between min and max bounds."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Health Checks"),": Default TCP liveness (30s delay) and readiness probes (10s delay) can be enabled. Advanced users can customize via the pod YAML editor."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Custom Pod YAML"),": Services with customized YAML show a badge indicator. Editing the service form with customized YAML may override manual changes - review the diff dialog before saving."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Pinning Services"),": Pin frequently-accessed services to keep them at the top of the list for quick access."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Default Port"),": Services default to port 8787, but this can be changed. Ensure your application listens on the configured port."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Restart After Edit"),": Some configuration changes (environment config, pipeline path, image) trigger automatic restart. Others require manual restart to apply."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Pipeline Types"),": Shell (BASH) runs a single startup script; Multi-step (YAML) supports complex multi-stage pipelines with dependencies."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Git Integration"),": Non-custom environment configs require Git integration. Custom images can optionally disable Git sync."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Status Polling"),": The UI automatically refreshes service status. Manual refresh button available in toolbar."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Filtering"),": Filters persist in the URL, allowing you to bookmark or share specific filtered views."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Grafana Integration"),": If configured, services automatically get Grafana dashboards for detailed metrics and logging.")))}d.isMDXComponent=!0}}]);