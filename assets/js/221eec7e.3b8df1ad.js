"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4256],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),o=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=o(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=o(a),m=n,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||c;return a?r.createElement(h,l(l({ref:t},u),{},{components:a})):r.createElement(h,l({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,l=new Array(c);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var o=2;o<c;o++)l[o]=a[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5309:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return p}});var r=a(7462),n=a(3366),c=(a(7294),a(3905)),l=["components"],i={},s="Create a K8s ServiceAccount with ECR Image Pull Secret (hyperplane-pipelines)",o={unversionedId:"shakudo-platform-core/customImageSecret/k8s-serviceaccount-ecr-secret",id:"shakudo-platform-core/customImageSecret/k8s-serviceaccount-ecr-secret",title:"Create a K8s ServiceAccount with ECR Image Pull Secret (hyperplane-pipelines)",description:"This guide creates a ServiceAccount in the hyperplane-pipelines namespace and mounts an image pull secret (secret-based auth) so Pods can pull private images.",source:"@site/docs/shakudo-platform-core/customImageSecret/k8s-serviceaccount-ecr-secret.md",sourceDirName:"shakudo-platform-core/customImageSecret",slug:"/shakudo-platform-core/customImageSecret/k8s-serviceaccount-ecr-secret",permalink:"/shakudo-platform-core/customImageSecret/k8s-serviceaccount-ecr-secret",draft:!1,tags:[],version:"current",lastUpdatedBy:"Yijie",lastUpdatedAt:1758663316,formattedLastUpdatedAt:"9/23/2025",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Traffic Shifter",permalink:"/shakudo-platform-core/adminSettings/traffic-shifter"},next:{title:"Shakudo Stack Components",permalink:"/category/shakudo-stack-components"}},u={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1 Create a service account",id:"1-create-a-service-account",level:2},{value:"2 Set variables",id:"2-set-variables",level:2},{value:"3 Create the image pull secret (secret-based auth)",id:"3-create-the-image-pull-secret-secret-based-auth",level:2},{value:"4) Patch the ServiceAccount and attach the imagePullSecret",id:"4-patch-the-serviceaccount-and-attach-the-imagepullsecret",level:2},{value:"5) Verify",id:"5-verify",level:2},{value:"6) Use the ServiceAccount in your workloads",id:"6-use-the-serviceaccount-in-your-workloads",level:2},{value:"(Optional) Attach the pull secret to the default ServiceAccount, to allow every pod within the namespace be able to pull the images by default.",id:"optional-attach-the-pull-secret-to-the-default-serviceaccount-to-allow-every-pod-within-the-namespace-be-able-to-pull-the-images-by-default",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],d={toc:p};function m(e){var t=e.components,i=(0,n.Z)(e,l);return(0,c.kt)("wrapper",(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"create-a-k8s-serviceaccount-with-ecr-image-pull-secret-hyperplane-pipelines"},"Create a K8s ServiceAccount with ECR Image Pull Secret (hyperplane-pipelines)"),(0,c.kt)("p",null,"This guide creates a ServiceAccount in the ",(0,c.kt)("inlineCode",{parentName:"p"},"hyperplane-pipelines")," namespace and mounts an image pull secret (secret-based auth) so Pods can pull private images."),(0,c.kt)("p",null,"You can use ",(0,c.kt)("inlineCode",{parentName:"p"},"hyperplane-jhub")," namespace if you wish to use it in Sessions for development."),(0,c.kt)("p",null,"Here is how purposes are mapping into namespaces:\n",(0,c.kt)("inlineCode",{parentName:"p"},"Development: hyperplane-pipelines"),"\n",(0,c.kt)("inlineCode",{parentName:"p"},"Workloads: hyperplane-jhub")),(0,c.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Permissions to create secrets, and service accounts."),(0,c.kt)("li",{parentName:"ul"},"An existing private repository with images to pull.")),(0,c.kt)("h2",{id:"1-create-a-service-account"},"1 Create a service account"),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"Create svc account in Shakudo platform",src:a(7350).Z,title:"optional title",width:"2788",height:"1252"})),(0,c.kt)("p",null,"The name can be ",(0,c.kt)("inlineCode",{parentName:"p"},"hyperplane-pipelines-sa")," as an example."),(0,c.kt)("h1",{id:"following-steps-will-be-finished-in-shakudo-cloud-terminal"},"Following steps will be finished in Shakudo cloud terminal."),(0,c.kt)("p",null,(0,c.kt)("img",{alt:"alt text",src:a(8098).Z,width:"2534",height:"208"}),"\n",(0,c.kt)("img",{alt:"alt text",src:a(7963).Z,width:"1499",height:"569"})),(0,c.kt)("h2",{id:"2-set-variables"},"2 Set variables"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'NS=hyperplane-pipelines\nSA_NAME=hyperplane-pipelines-sa\nPULL_SECRET_NAME=ecr-pull-secret\n\n# ECR details\nAWS_ACCOUNT_ID=<your-aws-account-id>\nAWS_REGION=<your-aws-region>          # e.g., us-east-1\nPRIVATE_REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"\n')),(0,c.kt)("h2",{id:"3-create-the-image-pull-secret-secret-based-auth"},"3 Create the image pull secret (secret-based auth)"),(0,c.kt)("p",null,"Create a ",(0,c.kt)("inlineCode",{parentName:"p"},"docker-registry")," secret using your existing username password."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl create secret docker-registry "$PULL_SECRET_NAME" \\\n    --docker-server="$PRIVATE_REGISTRY" \\\n    --docker-username=AWS \\\n    --docker-password-stdin \\\n    -n "$NS"\n')),(0,c.kt)("p",null,"If the secret exists and you need to refresh the token, delete and recreate it:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl delete secret "$PULL_SECRET_NAME" -n "$NS" --ignore-not-found\nkubectl create secret docker-registry "$PULL_SECRET_NAME" \\\n    --docker-server="$PRIVATE_REGISTRY" \\\n    --docker-username=AWS \\\n    --docker-password-stdin \\\n    -n "$NS"\n')),(0,c.kt)("h2",{id:"4-patch-the-serviceaccount-and-attach-the-imagepullsecret"},"4) Patch the ServiceAccount and attach the imagePullSecret"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl patch serviceaccount "$SA_NAME" -n "$NS" \\\n  -p "{\\"imagePullSecrets\\":[{\\"name\\":\\"$PULL_SECRET_NAME\\"}]}"\n')),(0,c.kt)("h2",{id:"5-verify"},"5) Verify"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl get sa "$SA_NAME" -n "$NS" -o yaml | grep -A2 imagePullSecrets\n')),(0,c.kt)("p",null,"You should see the secret name under ",(0,c.kt)("inlineCode",{parentName:"p"},"imagePullSecrets"),"."),(0,c.kt)("h2",{id:"6-use-the-serviceaccount-in-your-workloads"},"6) Use the ServiceAccount in your workloads"),(0,c.kt)("p",null,"Reference the ServiceAccount so Pods inherit the pull secret.\n",(0,c.kt)("img",{alt:"alt text",src:a(3733).Z,width:"2748",height:"1024"})),(0,c.kt)("h2",{id:"optional-attach-the-pull-secret-to-the-default-serviceaccount-to-allow-every-pod-within-the-namespace-be-able-to-pull-the-images-by-default"},"(Optional) Attach the pull secret to the default ServiceAccount, to allow every pod within the namespace be able to pull the images by default."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl patch serviceaccount default -n "$NS" \\\n  -p "{\\"imagePullSecrets\\":[{\\"name\\":\\"$PULL_SECRET_NAME\\"}]}"\n')),(0,c.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("inlineCode",{parentName:"li"},"ImagePullBackOff")," / ",(0,c.kt)("inlineCode",{parentName:"li"},"ErrImagePull"),":",(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},"Secret must exist in the same namespace as the Pod."),(0,c.kt)("li",{parentName:"ul"},"Ensure ",(0,c.kt)("inlineCode",{parentName:"li"},"--docker-server")," matches your custom registry."),(0,c.kt)("li",{parentName:"ul"},"Check image URI correctness and repository permissions.")))))}m.isMDXComponent=!0},7963:function(e,t,a){t.Z=a.p+"assets/images/ClusterShell-9e24eef3100973dab25fb393f2266def.png"},8098:function(e,t,a){t.Z=a.p+"assets/images/ClusterShellIcon-e23e7052d477dadc07686276ab3ccca2.png"},7350:function(e,t,a){t.Z=a.p+"assets/images/CreateServiceAccount-10dda38960e849021c9f31ab5f67a2f7.png"},3733:function(e,t,a){t.Z=a.p+"assets/images/CreateSession-88524e870d64333f74ed69930c4b16e0.png"}}]);