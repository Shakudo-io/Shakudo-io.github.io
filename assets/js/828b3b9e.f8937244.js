"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1567],{3905:function(e,a,t){t.d(a,{Zo:function(){return c},kt:function(){return m}});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},c=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(t),m=l,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return t?n.createElement(k,r(r({ref:a},c),{},{components:t})):n.createElement(k,r({ref:a},c))}));function m(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=d;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<i;p++)r[p]=t[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8621:function(e,a,t){t.r(a),t.d(a,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var n=t(7462),l=t(3366),i=(t(7294),t(3905)),r=["components"],o={},s="Datalake (Shakudo Data Lakehouse)",p={unversionedId:"developer-docs/features/datalake",id:"developer-docs/features/datalake",title:"Datalake (Shakudo Data Lakehouse)",description:"Overview",source:"@site/docs/developer-docs/features/datalake.md",sourceDirName:"developer-docs/features",slug:"/developer-docs/features/datalake",permalink:"/developer-docs/features/datalake",draft:!1,tags:[],version:"current",lastUpdatedBy:"chyuen-devsentient",lastUpdatedAt:1760392019,formattedLastUpdatedAt:"10/13/2025",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Data Stack Graph",permalink:"/developer-docs/features/data-stack-graph"},next:{title:"Distributed Workloads Dashboard",permalink:"/developer-docs/features/distributed-workloads-dashboard"}},c={},u=[{value:"Overview",id:"overview",level:2},{value:"Access &amp; Location",id:"access--location",level:2},{value:"Key Capabilities",id:"key-capabilities",level:2},{value:"Browse Object Storage",id:"browse-object-storage",level:3},{value:"Explore Iceberg Catalogs",id:"explore-iceberg-catalogs",level:3},{value:"Query Sample Data",id:"query-sample-data",level:3},{value:"Integrated PySpark Terminal",id:"integrated-pyspark-terminal",level:3},{value:"Configuration Management",id:"configuration-management",level:3},{value:"Bytebase SQL Sandbox",id:"bytebase-sql-sandbox",level:3},{value:"User Interface",id:"user-interface",level:2},{value:"Main View",id:"main-view",level:3},{value:"Dialogs &amp; Modals",id:"dialogs--modals",level:3},{value:"Tables &amp; Data Grids",id:"tables--data-grids",level:3},{value:"Technical Details",id:"technical-details",level:2},{value:"GraphQL Operations",id:"graphql-operations",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"State Management",id:"state-management",level:3},{value:"Common Workflows",id:"common-workflows",level:2},{value:"Browse Data Lakehouse Contents",id:"browse-data-lakehouse-contents",level:3},{value:"Query Sample Data from a Table",id:"query-sample-data-from-a-table",level:3},{value:"Run Interactive Spark Queries",id:"run-interactive-spark-queries",level:3},{value:"Set Up PySpark Connection",id:"set-up-pyspark-connection",level:3},{value:"Access Bytebase SQL Sandbox",id:"access-bytebase-sql-sandbox",level:3},{value:"Related Features",id:"related-features",level:2},{value:"Notes &amp; Tips",id:"notes--tips",level:2},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Data Organization Best Practices",id:"data-organization-best-practices",level:3},{value:"Path Formats",id:"path-formats",level:3},{value:"Iceberg Table Detection",id:"iceberg-table-detection",level:3},{value:"Connection Information",id:"connection-information",level:3},{value:"Availability",id:"availability",level:3}],d={toc:u};function m(e){var a=e.components,t=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"datalake-shakudo-data-lakehouse"},"Datalake (Shakudo Data Lakehouse)"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The Datalake panel provides a comprehensive interface for managing and exploring the Shakudo Data Lakehouse - an Apache Iceberg-based data lakehouse built on object storage. This feature enables users to browse S3 buckets, explore Iceberg catalogs and tables, query sample data, and interact with data through an integrated PySpark terminal. The lakehouse combines the flexibility of data lakes with the structure and ACID guarantees of data warehouses, using Apache Iceberg as the table format and supporting both Nessie and Postgres as catalog backends."),(0,i.kt)("h2",{id:"access--location"},"Access & Location"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Route"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"?panel=datalake")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Navigation"),": Admin \u2192 Datalake"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Access Requirements"),": None (feature-flag gated)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Feature Flags"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"datalakeEnabled"))),(0,i.kt)("h2",{id:"key-capabilities"},"Key Capabilities"),(0,i.kt)("h3",{id:"browse-object-storage"},"Browse Object Storage"),(0,i.kt)("p",null,"Navigate through the S3-compatible object storage bucket that backs the data lakehouse. View folders and files, see metadata like size, object count, and last modified timestamps. The file browser provides a hierarchical view of the storage structure."),(0,i.kt)("h3",{id:"explore-iceberg-catalogs"},"Explore Iceberg Catalogs"),(0,i.kt)("p",null,"View and interact with Apache Iceberg catalogs that organize tables into logical namespaces. Each catalog contains multiple tables with metadata about schema, partitions, and data files. Catalogs are grouped by name and display statistics about total tables and storage size."),(0,i.kt)("h3",{id:"query-sample-data"},"Query Sample Data"),(0,i.kt)("p",null,"Preview data from Parquet files and Iceberg tables directly in the browser. Sample data can be viewed in both table format and JSON format, with configurable sample sizes (10, 20, 50, 100, 250, or 500 rows). This allows quick data validation without running full queries."),(0,i.kt)("h3",{id:"integrated-pyspark-terminal"},"Integrated PySpark Terminal"),(0,i.kt)("p",null,"Access an interactive PySpark shell pre-configured with the lakehouse connection. Execute Spark SQL queries, perform data transformations, and interact with Iceberg tables programmatically. The terminal can be restarted to clear the session state."),(0,i.kt)("h3",{id:"configuration-management"},"Configuration Management"),(0,i.kt)("p",null,"Access setup guides for configuring PySpark sessions and Nessie/Dremio integrations. These guides provide copy-paste ready code snippets with bucket names and connection strings pre-filled."),(0,i.kt)("h3",{id:"bytebase-sql-sandbox"},"Bytebase SQL Sandbox"),(0,i.kt)("p",null,"For systems with Bytebase integration, users can open a SQL sandbox environment to run queries against the lakehouse using a web-based SQL editor."),(0,i.kt)("h2",{id:"user-interface"},"User Interface"),(0,i.kt)("h3",{id:"main-view"},"Main View"),(0,i.kt)("p",null,"The main panel displays:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Header"),': Panel title "Shakudo Data Lakehouse" with an "Advanced" menu for accessing configuration dialogs'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Bucket Details Card"),": Shows bucket name, last modified date, total objects, total size, and Postgres catalog connection status"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Navigation"),": Breadcrumb-style path navigation showing current location in the folder hierarchy"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Content Area"),": Either displays the catalog list view or the file/folder browser depending on navigation state")),(0,i.kt)("h3",{id:"dialogs--modals"},"Dialogs & Modals"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Interactive Shell Dialog")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Purpose: Provides a fullscreen PySpark terminal for interactive data queries"),(0,i.kt)("li",{parentName:"ul"},"Features: Embedded iframe terminal, session restart button, clipboard access for copy/paste"),(0,i.kt)("li",{parentName:"ul"},"Actions: Execute Spark commands, restart session, close dialog"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Spark Session Setup Dialog")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Purpose: Displays markdown documentation for configuring PySpark sessions"),(0,i.kt)("li",{parentName:"ul"},"Fields: Pre-filled code examples with bucket name and Postgres URL"),(0,i.kt)("li",{parentName:"ul"},"Actions: Copy code snippets, close dialog"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Nessie Dremio Setup Dialog")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Purpose: Displays markdown documentation for Nessie catalog configuration"),(0,i.kt)("li",{parentName:"ul"},"Fields: Setup instructions and configuration examples"),(0,i.kt)("li",{parentName:"ul"},"Actions: Copy code snippets, close dialog"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Sample Data Viewer Dialog")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Purpose: Display sample rows from Parquet files or Iceberg tables"),(0,i.kt)("li",{parentName:"ul"},"Fields: Data table view, JSON view toggle, sample size selector"),(0,i.kt)("li",{parentName:"ul"},"Actions: Switch between table/JSON views, copy JSON to clipboard, close dialog")))),(0,i.kt)("h3",{id:"tables--data-grids"},"Tables & Data Grids"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Iceberg Catalogs Grid")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Display: Card-based grid layout grouped by catalog name"),(0,i.kt)("li",{parentName:"ul"},"Columns: Table name, catalog name, namespace, object count, size"),(0,i.kt)("li",{parentName:"ul"},"Actions: Click to explore catalog contents, view sample data, copy path, open in Bytebase"),(0,i.kt)("li",{parentName:"ul"},"Features: Expandable accordions for each catalog group"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Files and Folders Table")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Display: Striped table with alternating row colors"),(0,i.kt)("li",{parentName:"ul"},"Columns: Name (with folder/file icons), Last Modified, Objects (for folders), Size, Actions"),(0,i.kt)("li",{parentName:"ul"},"Actions: Click folders to navigate, view sample data, copy path, copy code examples, download files"),(0,i.kt)("li",{parentName:"ul"},"Features: Pagination (5/10/25/50 rows per page), hover highlighting for folders"),(0,i.kt)("li",{parentName:"ul"},"Filtering: None (shows all contents of current path)")))),(0,i.kt)("h2",{id:"technical-details"},"Technical Details"),(0,i.kt)("h3",{id:"graphql-operations"},"GraphQL Operations"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Queries:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"isDatalakeAvailable")," - Checks if the datalake feature is configured and available"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getDatalakeBucketDetails")," - Retrieves bucket metadata including name, size, file count, and last modified"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getPostgresFullUrl")," - Gets the Postgres connection URL for the Iceberg catalog"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getIcebergCatalogs")," - Lists all Iceberg catalogs with their tables and metadata locations"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getDatalakeBucketFilesAndFolders")," - Lists files and folders at a given S3 prefix"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getDatalakeObjectDetails")," - Gets detailed metadata for a specific S3 object or folder"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"isIcebergTable")," - Checks if a given path is an Iceberg table"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getSampleData")," - Retrieves sample rows from a Parquet file or Iceberg table")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Mutations:"),"\nNone - this is a read-only interface"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Subscriptions:"),"\nNone"),(0,i.kt)("h3",{id:"component-structure"},"Component Structure"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Main Component: ",(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/Panel.tsx")),(0,i.kt)("li",{parentName:"ul"},"Core Component: ",(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/Datalake.tsx")),(0,i.kt)("li",{parentName:"ul"},"Bucket Details: ",(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/DatalakeBucketDetails.tsx")),(0,i.kt)("li",{parentName:"ul"},"Catalogs View: ",(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/Catalogs.tsx")),(0,i.kt)("li",{parentName:"ul"},"File Browser: ",(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/DatalakePathFolderAndFiles.tsx")),(0,i.kt)("li",{parentName:"ul"},"Catalog Cards: ",(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/CatalogCard2.tsx")),(0,i.kt)("li",{parentName:"ul"},"Dialogs:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/DatalakeIntegratedTerminalDialog.tsx")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/PySparkConfigDialog.tsx")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/NessieConfigDialog.tsx")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/IcebergTableSampleData.tsx")))),(0,i.kt)("li",{parentName:"ul"},"Actions: ",(0,i.kt)("inlineCode",{parentName:"li"},"components/Datalake/DataLakeTableObjectActions.tsx"))),(0,i.kt)("h3",{id:"state-management"},"State Management"),(0,i.kt)("p",null,"The component uses Jotai atoms for state management:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BucketNameAtom")," - Stores the current bucket name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SubpathAtom")," - Tracks the current navigation path in the bucket"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DataLakePostgresFullUrlAtom")," - Stores the Postgres catalog connection URL"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LoadingFilesAndFolderAtom")," - Tracks loading state for file browser"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DataSampleSizeAtom")," - Controls the number of rows to fetch when sampling data"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DataLakeCatalogSelected")," - Stores the currently selected catalog for exploration")),(0,i.kt)("h2",{id:"common-workflows"},"Common Workflows"),(0,i.kt)("h3",{id:"browse-data-lakehouse-contents"},"Browse Data Lakehouse Contents"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Navigate to Admin \u2192 Datalake panel"),(0,i.kt)("li",{parentName:"ol"},"View the main bucket details card showing overall statistics"),(0,i.kt)("li",{parentName:"ol"},"Click on an Iceberg catalog in the catalogs list to explore its contents"),(0,i.kt)("li",{parentName:"ol"},"Navigate through folders by clicking on folder rows"),(0,i.kt)("li",{parentName:"ol"},"Use the breadcrumb navigation to return to parent folders or catalogs list"),(0,i.kt)("li",{parentName:"ol"},'Click "Refresh" button to update bucket statistics')),(0,i.kt)("h3",{id:"query-sample-data-from-a-table"},"Query Sample Data from a Table"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Browse to a catalog or folder containing data"),(0,i.kt)("li",{parentName:"ol"},"Locate the table or Parquet file you want to preview"),(0,i.kt)("li",{parentName:"ol"},"Click the eye icon in the Actions column"),(0,i.kt)("li",{parentName:"ol"},"Wait for data to load (respects the sample size setting)"),(0,i.kt)("li",{parentName:"ol"},'Toggle between "Table" and "JSON" views using the toggle buttons'),(0,i.kt)("li",{parentName:"ol"},"Optionally copy the JSON data to clipboard"),(0,i.kt)("li",{parentName:"ol"},"Close the dialog when finished")),(0,i.kt)("h3",{id:"run-interactive-spark-queries"},"Run Interactive Spark Queries"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},'Click the "Advanced" button in the panel header'),(0,i.kt)("li",{parentName:"ol"},'Select "Interactive Shell" from the dropdown menu'),(0,i.kt)("li",{parentName:"ol"},"Wait for the PySpark terminal to load (shows iframe)"),(0,i.kt)("li",{parentName:"ol"},"Execute Spark SQL or PySpark commands in the terminal"),(0,i.kt)("li",{parentName:"ol"},"Use the restart button if you need to reset the session"),(0,i.kt)("li",{parentName:"ol"},"Close the dialog when finished")),(0,i.kt)("h3",{id:"set-up-pyspark-connection"},"Set Up PySpark Connection"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},'Click the "Advanced" button in the panel header'),(0,i.kt)("li",{parentName:"ol"},'Select "Spark Session Setup" from the dropdown'),(0,i.kt)("li",{parentName:"ol"},"Review the configuration documentation with pre-filled values"),(0,i.kt)("li",{parentName:"ol"},"Copy the code snippets to use in your own notebooks or scripts"),(0,i.kt)("li",{parentName:"ol"},"Close the dialog when finished")),(0,i.kt)("h3",{id:"access-bytebase-sql-sandbox"},"Access Bytebase SQL Sandbox"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Ensure Bytebase is configured (visible if ",(0,i.kt)("inlineCode",{parentName:"li"},"datalakeBytebase")," platform parameter is set)"),(0,i.kt)("li",{parentName:"ol"},'Click the "Try it in Sandbox" button in the catalogs view'),(0,i.kt)("li",{parentName:"ol"},"Opens Bytebase in a new browser tab"),(0,i.kt)("li",{parentName:"ol"},"Run SQL queries against the lakehouse catalog")),(0,i.kt)("h2",{id:"related-features"},"Related Features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/developer-docs/features/sessions"},"Sessions")," - For running Jupyter notebooks that connect to the datalake"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/developer-docs/features/jobs"},"Jobs")," - For scheduling data pipeline jobs that read/write to the lakehouse"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/developer-docs/features/stack-components"},"Stack Components")," - For deploying complementary tools like Dremio or Trino")),(0,i.kt)("h2",{id:"notes--tips"},"Notes & Tips"),(0,i.kt)("h3",{id:"performance-considerations"},"Performance Considerations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Large folders may take time to load - the interface fetches all items at once before displaying"),(0,i.kt)("li",{parentName:"ul"},"Sample data queries are limited to configured sample sizes to prevent slow queries"),(0,i.kt)("li",{parentName:"ul"},"The integrated terminal maintains session state, so restart if you encounter memory issues")),(0,i.kt)("h3",{id:"data-organization-best-practices"},"Data Organization Best Practices"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Iceberg tables are organized in a hierarchy: catalog \u2192 namespace \u2192 table"),(0,i.kt)("li",{parentName:"ul"},"Each table's data files are stored in a ",(0,i.kt)("inlineCode",{parentName:"li"},"data/")," subdirectory"),(0,i.kt)("li",{parentName:"ul"},"Metadata files are stored in a ",(0,i.kt)("inlineCode",{parentName:"li"},"metadata/")," subdirectory"),(0,i.kt)("li",{parentName:"ul"},"Use consistent naming conventions for catalogs and namespaces")),(0,i.kt)("h3",{id:"path-formats"},"Path Formats"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"S3 paths are displayed in the format: ",(0,i.kt)("inlineCode",{parentName:"li"},"s3://bucket-name/path/to/object")),(0,i.kt)("li",{parentName:"ul"},"Internal paths used for navigation exclude the ",(0,i.kt)("inlineCode",{parentName:"li"},"s3://")," prefix and bucket name"),(0,i.kt)("li",{parentName:"ul"},"Copy path buttons provide the full S3 URL for use in external tools")),(0,i.kt)("h3",{id:"iceberg-table-detection"},"Iceberg Table Detection"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The system automatically detects whether a path contains an Iceberg table"),(0,i.kt)("li",{parentName:"ul"},"Iceberg tables have special handling for sample data (reads from data/ subdirectory)"),(0,i.kt)("li",{parentName:"ul"},"Non-Iceberg Parquet files are read directly")),(0,i.kt)("h3",{id:"connection-information"},"Connection Information"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The Postgres connection URL shown in the bucket details card is masked for security"),(0,i.kt)("li",{parentName:"ul"},"Hover over the connection chip to reveal the masked URL"),(0,i.kt)("li",{parentName:"ul"},"Click the chip to copy the full unmasked URL to clipboard")),(0,i.kt)("h3",{id:"availability"},"Availability"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the datalake is not configured, an informational message appears"),(0,i.kt)("li",{parentName:"ul"},"The feature requires backend services to be running and properly configured"),(0,i.kt)("li",{parentName:"ul"},"Check with your platform administrator if the datalake appears unavailable")))}m.isMDXComponent=!0}}]);