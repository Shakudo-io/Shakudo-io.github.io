"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3072],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return c}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),m=p(a),c=o,k=m["".concat(s,".").concat(c)]||m[c]||d[c]||l;return a?n.createElement(k,i(i({ref:t},u),{},{components:a})):n.createElement(k,i({ref:t},u))}));function c(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=a.length,i=new Array(l);i[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,i[1]=r;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9827:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return r},metadata:function(){return p},toc:function(){return d}});var n=a(7462),o=a(3366),l=(a(7294),a(3905)),i=["components"],r={},s="Plugins Panel",p={unversionedId:"developer-docs/features/plugins",id:"developer-docs/features/plugins",title:"Plugins Panel",description:"Overview",source:"@site/docs/developer-docs/features/plugins.md",sourceDirName:"developer-docs/features",slug:"/developer-docs/features/plugins",permalink:"/developer-docs/features/plugins",draft:!1,tags:[],version:"current",lastUpdatedBy:"chyuen-devsentient",lastUpdatedAt:1760986571,formattedLastUpdatedAt:"10/20/2025",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Persistent Volumes",permalink:"/developer-docs/features/persistent-volumes"},next:{title:"Satellite Clusters",permalink:"/developer-docs/features/satellite-clusters"}},u={},d=[{value:"Overview",id:"overview",level:2},{value:"Access &amp; Location",id:"access--location",level:2},{value:"Key Capabilities",id:"key-capabilities",level:2},{value:"Workflow Automation Hub",id:"workflow-automation-hub",level:3},{value:"Visual Workflow Designer",id:"visual-workflow-designer",level:3},{value:"Stack Component Integration",id:"stack-component-integration",level:3},{value:"Event-Driven Automation",id:"event-driven-automation",level:3},{value:"Shakudo Pipeline Orchestration",id:"shakudo-pipeline-orchestration",level:3},{value:"AI Workflow Automation",id:"ai-workflow-automation",level:3},{value:"Data Processing and ETL",id:"data-processing-and-etl",level:3},{value:"Monitoring and Observability",id:"monitoring-and-observability",level:3},{value:"User Interface",id:"user-interface",level:2},{value:"Main View",id:"main-view",level:3},{value:"Dialogs &amp; Modals",id:"dialogs--modals",level:3},{value:"Tables &amp; Data Grids",id:"tables--data-grids",level:3},{value:"Technical Details",id:"technical-details",level:2},{value:"GraphQL Operations",id:"graphql-operations",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"Implementation Details",id:"implementation-details",level:3},{value:"State Management",id:"state-management",level:3},{value:"URL Pattern",id:"url-pattern",level:3},{value:"Feature Flag Configuration",id:"feature-flag-configuration",level:3},{value:"Common Workflows",id:"common-workflows",level:2},{value:"Automating AI-Powered Reporting",id:"automating-ai-powered-reporting",level:3},{value:"Event-Driven Data Pipeline",id:"event-driven-data-pipeline",level:3},{value:"Scheduled Data Ingestion from External API",id:"scheduled-data-ingestion-from-external-api",level:3},{value:"Connecting Multiple Stack Components",id:"connecting-multiple-stack-components",level:3},{value:"Triggering and Monitoring Shakudo Jobs",id:"triggering-and-monitoring-shakudo-jobs",level:3},{value:"Related Features",id:"related-features",level:2},{value:"Notes &amp; Tips",id:"notes--tips",level:2},{value:"Best Practices",id:"best-practices",level:3},{value:"Integration Examples",id:"integration-examples",level:3},{value:"Common Use Cases",id:"common-use-cases",level:3},{value:"Performance Considerations",id:"performance-considerations",level:3},{value:"Troubleshooting Common Issues",id:"troubleshooting-common-issues",level:3},{value:"Important Limitations",id:"important-limitations",level:3},{value:"Installation and Setup",id:"installation-and-setup",level:3},{value:"Workflow Development Tips",id:"workflow-development-tips",level:3}],m={toc:d};function c(e){var t=e.components,a=(0,o.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"plugins-panel"},"Plugins Panel"),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"The Plugins panel provides access to n8n, a powerful workflow automation platform integrated into Shakudo. n8n enables users to create automated workflows that connect APIs, services, databases, and other Shakudo stack components through a visual interface. This panel loads the n8n web interface in an embedded view, allowing users to design, execute, and monitor automation workflows without leaving the Shakudo dashboard."),(0,l.kt)("h2",{id:"access--location"},"Access & Location"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Route"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"?panel=plugins")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Navigation"),": Header (Quick Access) \u2192 Plugins"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Access Requirements"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Must have ",(0,l.kt)("inlineCode",{parentName:"li"},"pluginsPanelEnabled")," feature flag enabled at the platform level"),(0,l.kt)("li",{parentName:"ul"},"No specific RBAC requirements - access follows n8n's own authentication"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Feature Flags"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"pluginsPanelEnabled")," (environment variable: ",(0,l.kt)("inlineCode",{parentName:"li"},"HYPERPLANE__DASHBOARD_PLUGINS_PANEL_ENABLED"),")")),(0,l.kt)("h2",{id:"key-capabilities"},"Key Capabilities"),(0,l.kt)("h3",{id:"workflow-automation-hub"},"Workflow Automation Hub"),(0,l.kt)("p",null,"Access n8n as a central automation hub for orchestrating processes across the Shakudo platform. Design visual workflows that connect multiple services, trigger actions based on events, and automate data pipelines without writing code."),(0,l.kt)("h3",{id:"visual-workflow-designer"},"Visual Workflow Designer"),(0,l.kt)("p",null,"Use n8n's drag-and-drop interface to build automation workflows with nodes representing different services, actions, and logic. Connect nodes to create complex automation scenarios that span multiple Shakudo components."),(0,l.kt)("h3",{id:"stack-component-integration"},"Stack Component Integration"),(0,l.kt)("p",null,"Connect n8n workflows to other Shakudo stack components using internal Kubernetes service URLs. Integrate with databases (Supabase, ClickHouse), AI services (Ollama, LiteLLM), messaging systems (Kafka), observability tools (Langfuse), and more."),(0,l.kt)("h3",{id:"event-driven-automation"},"Event-Driven Automation"),(0,l.kt)("p",null,"Trigger workflows based on webhooks, scheduled events, Kafka messages, or data changes in connected services. Create responsive automation that reacts to events across your data infrastructure."),(0,l.kt)("h3",{id:"shakudo-pipeline-orchestration"},"Shakudo Pipeline Orchestration"),(0,l.kt)("p",null,"Trigger and monitor Shakudo immediate and scheduled jobs from n8n workflows. Build complex data processing pipelines that combine Shakudo's compute capabilities with n8n's automation logic."),(0,l.kt)("h3",{id:"ai-workflow-automation"},"AI Workflow Automation"),(0,l.kt)("p",null,"Query LLM models hosted on Ollama or routed through LiteLLM directly from n8n workflows. Build AI-powered automation for content generation, text summarization, data analysis, and intelligent decision-making."),(0,l.kt)("h3",{id:"data-processing-and-etl"},"Data Processing and ETL"),(0,l.kt)("p",null,"Fetch, transform, and load data between different systems. Create ETL workflows that move data between Supabase, ClickHouse, MinIO, and external APIs, with built-in error handling and retry logic."),(0,l.kt)("h3",{id:"monitoring-and-observability"},"Monitoring and Observability"),(0,l.kt)("p",null,"Integrate with Langfuse to log and trace workflow executions, API calls, and LLM responses. Track workflow performance and debug issues with detailed execution history."),(0,l.kt)("h2",{id:"user-interface"},"User Interface"),(0,l.kt)("h3",{id:"main-view"},"Main View"),(0,l.kt)("p",null,"The Plugins panel displays a full-screen iframe that loads the n8n web interface from the ",(0,l.kt)("inlineCode",{parentName:"p"},"plugins")," subdomain (e.g., ",(0,l.kt)("inlineCode",{parentName:"p"},"https://plugins.{domain}"),"). The iframe adapts to the dashboard's navigation state:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Desktop View"),": Left padding adjusts based on whether the main navigation drawer is locked (expanded) or collapsed"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Mobile View"),": No left padding, full-width display for optimal mobile experience"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Responsive Layout"),": Automatically adjusts to viewport size changes")),(0,l.kt)("p",null,"The n8n interface within the iframe provides:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Canvas"),": Visual workflow editor with drag-and-drop nodes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Node Panel"),": Library of available integrations and actions"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Execution History"),": View past workflow runs and debug failures"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Credentials Manager"),": Securely store API keys and connection details"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Settings"),": Configure workflow behavior, error handling, and scheduling")),(0,l.kt)("h3",{id:"dialogs--modals"},"Dialogs & Modals"),(0,l.kt)("p",null,"The Plugins panel itself does not implement any dialogs. All interactions occur within the embedded n8n interface, which has its own modal dialogs for:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Node configuration"),(0,l.kt)("li",{parentName:"ul"},"Credential management"),(0,l.kt)("li",{parentName:"ul"},"Workflow settings"),(0,l.kt)("li",{parentName:"ul"},"Execution details"),(0,l.kt)("li",{parentName:"ul"},"Error messages")),(0,l.kt)("h3",{id:"tables--data-grids"},"Tables & Data Grids"),(0,l.kt)("p",null,"No tables are implemented in the panel component. All data visualization occurs within the n8n interface."),(0,l.kt)("h2",{id:"technical-details"},"Technical Details"),(0,l.kt)("h3",{id:"graphql-operations"},"GraphQL Operations"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Queries:"),"\nNone - The panel uses iframe embedding and does not make direct GraphQL calls"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Mutations:"),"\nNone - The panel uses iframe embedding and does not make direct GraphQL calls"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Subscriptions:"),"\nNone"),(0,l.kt)("h3",{id:"component-structure"},"Component Structure"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Main Component: ",(0,l.kt)("inlineCode",{parentName:"li"},"/root/gitrepos/monorepo/apps/hyperplane-dashboard/components/Plugins/PluginPanel.tsx")),(0,l.kt)("li",{parentName:"ul"},"Export Name: ",(0,l.kt)("inlineCode",{parentName:"li"},"N8nPanel")," (exported as default)")),(0,l.kt)("h3",{id:"implementation-details"},"Implementation Details"),(0,l.kt)("p",null,"The panel is implemented as a simple iframe wrapper that:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Constructs the n8n URL from platform parameters: ",(0,l.kt)("inlineCode",{parentName:"li"},"${protocol}://plugins.${domain}")),(0,l.kt)("li",{parentName:"ol"},"Applies responsive padding based on navigation drawer state (via ",(0,l.kt)("inlineCode",{parentName:"li"},"DrawerLockedAtom"),")"),(0,l.kt)("li",{parentName:"ol"},"Detects mobile viewport using Material-UI's responsive breakpoints"),(0,l.kt)("li",{parentName:"ol"},"Renders a borderless iframe with 100% height and width")),(0,l.kt)("h3",{id:"state-management"},"State Management"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Jotai Atom"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"DrawerLockedAtom")," - Tracks whether the main navigation drawer is locked/expanded"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Context"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"PlatformParametersContext")," - Provides domain and protocol for URL construction"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Responsive State"),": Material-UI's ",(0,l.kt)("inlineCode",{parentName:"li"},"useMediaQuery")," for mobile detection")),(0,l.kt)("h3",{id:"url-pattern"},"URL Pattern"),(0,l.kt)("p",null,"The n8n instance is hosted on a dedicated subdomain following the pattern:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"External URL"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"https://plugins.{domain}")," (e.g., ",(0,l.kt)("inlineCode",{parentName:"li"},"https://plugins.dev.hyperplane.dev"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Protocol"),": Inherits from platform configuration (typically HTTPS)")),(0,l.kt)("h3",{id:"feature-flag-configuration"},"Feature Flag Configuration"),(0,l.kt)("p",null,"The panel is only accessible when the platform administrator enables it via environment variable:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"HYPERPLANE__DASHBOARD_PLUGINS_PANEL_ENABLED=true\n")),(0,l.kt)("h2",{id:"common-workflows"},"Common Workflows"),(0,l.kt)("h3",{id:"automating-ai-powered-reporting"},"Automating AI-Powered Reporting"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create a new workflow in n8n"),(0,l.kt)("li",{parentName:"ol"},"Add a webhook trigger or schedule trigger node"),(0,l.kt)("li",{parentName:"ol"},"Add an HTTP Request node to query Ollama for AI-generated summaries:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"URL: ",(0,l.kt)("inlineCode",{parentName:"li"},"http://ollama.hyperplane-ollama.svc.cluster.local:11434")),(0,l.kt)("li",{parentName:"ul"},"Method: POST"),(0,l.kt)("li",{parentName:"ul"},"Include your prompt and model parameters"))),(0,l.kt)("li",{parentName:"ol"},"Add a Supabase node to store the AI-generated results"),(0,l.kt)("li",{parentName:"ol"},"Add a notification node (Slack, email) to send the report"),(0,l.kt)("li",{parentName:"ol"},"Activate the workflow and test execution")),(0,l.kt)("h3",{id:"event-driven-data-pipeline"},"Event-Driven Data Pipeline"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create a workflow with a Kafka trigger node"),(0,l.kt)("li",{parentName:"ol"},"Configure the Kafka node with your topic and connection details"),(0,l.kt)("li",{parentName:"ol"},"Add processing nodes to transform the incoming event data"),(0,l.kt)("li",{parentName:"ol"},"Add an HTTP Request node to trigger a Shakudo immediate job:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Use the Shakudo API to create and monitor the job"),(0,l.kt)("li",{parentName:"ul"},"Pass event data as job parameters"))),(0,l.kt)("li",{parentName:"ol"},"Add a Supabase node to log the pipeline execution"),(0,l.kt)("li",{parentName:"ol"},"Add a Langfuse node to track observability metrics"),(0,l.kt)("li",{parentName:"ol"},"Activate the workflow to process events in real-time")),(0,l.kt)("h3",{id:"scheduled-data-ingestion-from-external-api"},"Scheduled Data Ingestion from External API"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create a workflow with a Schedule trigger (e.g., daily at midnight)"),(0,l.kt)("li",{parentName:"ol"},"Add an HTTP Request node to fetch data from an external API"),(0,l.kt)("li",{parentName:"ol"},"Add data transformation nodes (Set, Function) to clean and format the data"),(0,l.kt)("li",{parentName:"ol"},"Add a database node (Supabase, ClickHouse) to insert the processed data"),(0,l.kt)("li",{parentName:"ol"},"Add error handling with conditional logic to retry failures"),(0,l.kt)("li",{parentName:"ol"},"Add a notification node to alert on success or failure"),(0,l.kt)("li",{parentName:"ol"},"Activate the workflow and monitor executions")),(0,l.kt)("h3",{id:"connecting-multiple-stack-components"},"Connecting Multiple Stack Components"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Map out your workflow across Supabase, Ollama, LiteLLM, and Appsmith"),(0,l.kt)("li",{parentName:"ol"},"Create a workflow that:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Fetches data from Supabase (PostgreSQL node)"),(0,l.kt)("li",{parentName:"ul"},"Processes data with AI using Ollama or LiteLLM (HTTP Request nodes)"),(0,l.kt)("li",{parentName:"ul"},"Stores enriched data back to Supabase"),(0,l.kt)("li",{parentName:"ul"},"Updates an Appsmith dashboard via API call"))),(0,l.kt)("li",{parentName:"ol"},"Configure internal Kubernetes service URLs for all components:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Supabase: ",(0,l.kt)("inlineCode",{parentName:"li"},"postgresql://<user>:<pass>@supabase.hyperplane-supabase:5432/<db>")),(0,l.kt)("li",{parentName:"ul"},"Ollama: ",(0,l.kt)("inlineCode",{parentName:"li"},"http://ollama.hyperplane-ollama.svc.cluster.local:11434")),(0,l.kt)("li",{parentName:"ul"},"LiteLLM: ",(0,l.kt)("inlineCode",{parentName:"li"},"http://litellm.hyperplane-litellm.svc.cluster.local:4000")),(0,l.kt)("li",{parentName:"ul"},"Langfuse: ",(0,l.kt)("inlineCode",{parentName:"li"},"http://langfuse.hyperplane-langfuse.svc.cluster.local:3000")))),(0,l.kt)("li",{parentName:"ol"},"Test each connection individually before running the full workflow"),(0,l.kt)("li",{parentName:"ol"},"Monitor execution logs in n8n and observability in Langfuse")),(0,l.kt)("h3",{id:"triggering-and-monitoring-shakudo-jobs"},"Triggering and Monitoring Shakudo Jobs"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create a workflow with an appropriate trigger (webhook, schedule, event)"),(0,l.kt)("li",{parentName:"ol"},"Add an HTTP Request node to create a Shakudo immediate job:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Use the Shakudo GraphQL API or REST endpoint"),(0,l.kt)("li",{parentName:"ul"},"Include job parameters (script, environment, resources)"))),(0,l.kt)("li",{parentName:"ol"},"Add a Wait node or polling logic to monitor job completion"),(0,l.kt)("li",{parentName:"ol"},"Add conditional logic to handle job success or failure"),(0,l.kt)("li",{parentName:"ol"},"Add follow-up actions based on job results (notifications, data processing)"),(0,l.kt)("li",{parentName:"ol"},"Store job metadata in Supabase for audit trail"),(0,l.kt)("li",{parentName:"ol"},"Activate and test the workflow with a test job")),(0,l.kt)("h2",{id:"related-features"},"Related Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/stack-components"},"Stack Components")," - Install and manage n8n and other automation tools"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/jobs"},"Jobs")," - Shakudo pipeline jobs that can be triggered from n8n workflows"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/scheduled-jobs"},"Scheduled Jobs")," - Recurring jobs that can complement n8n automation"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/services"},"Services")," - Long-running services that n8n can interact with"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/secrets"},"Secrets")," - Store API credentials used by n8n workflows securely")),(0,l.kt)("h2",{id:"notes--tips"},"Notes & Tips"),(0,l.kt)("h3",{id:"best-practices"},"Best Practices"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Use Internal URLs"),": Always connect to stack components using Kubernetes internal service URLs (e.g., ",(0,l.kt)("inlineCode",{parentName:"li"},"http://service.namespace.svc.cluster.local:port"),") for better performance and security"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Store Credentials Securely"),": Use n8n's credential manager to store API keys and database passwords instead of hardcoding them in workflows"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Error Handling"),": Add error handling nodes to workflows to gracefully handle failures and retry transient errors"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Test Incrementally"),": Build workflows step-by-step, testing each node individually before connecting them together"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Monitor Execution History"),": Regularly review workflow execution logs to identify bottlenecks and failures"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Use Langfuse"),": Integrate Langfuse for observability when building AI-powered workflows to track LLM usage and performance")),(0,l.kt)("h3",{id:"integration-examples"},"Integration Examples"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Connecting to Supabase:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext"},"Host: supabase.hyperplane-supabase\nPort: 5432\nDatabase: postgres (or your database name)\nUser: postgres (or your username)\nPassword: (use n8n credentials manager)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Querying Ollama:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext"},'URL: http://ollama.hyperplane-ollama.svc.cluster.local:11434/api/generate\nMethod: POST\nBody: {\n  "model": "llama3.2",\n  "prompt": "Your prompt here",\n  "stream": false\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Using LiteLLM Gateway:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plaintext"},"URL: http://litellm.hyperplane-litellm.svc.cluster.local:4000/chat/completions\nMethod: POST\nHeaders: Authorization: Bearer <your-api-key>\nBody: OpenAI-compatible format\n")),(0,l.kt)("h3",{id:"common-use-cases"},"Common Use Cases"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Automated AI Workflows")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Process user inputs and query Ollama for content generation"),(0,l.kt)("li",{parentName:"ul"},"Use LiteLLM to route requests across multiple LLM providers"),(0,l.kt)("li",{parentName:"ul"},"Store AI-generated results in Supabase for application use"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Data Ingestion and ETL")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Fetch data from external APIs on a schedule"),(0,l.kt)("li",{parentName:"ul"},"Transform and clean data using n8n's built-in functions"),(0,l.kt)("li",{parentName:"ul"},"Load data into Supabase, ClickHouse, or MinIO"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Pipeline Orchestration")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Trigger Shakudo immediate jobs when new data arrives"),(0,l.kt)("li",{parentName:"ul"},"Monitor job completion and process results"),(0,l.kt)("li",{parentName:"ul"},"Chain multiple jobs together with conditional logic"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Event-Driven Processing")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Subscribe to Kafka topics and process messages"),(0,l.kt)("li",{parentName:"ul"},"React to database changes via webhooks"),(0,l.kt)("li",{parentName:"ul"},"Trigger workflows based on external system events"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Observability and Monitoring")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Log all workflow executions to Langfuse"),(0,l.kt)("li",{parentName:"ul"},"Track LLM usage and costs"),(0,l.kt)("li",{parentName:"ul"},"Send alerts to Slack or email on failures")))),(0,l.kt)("h3",{id:"performance-considerations"},"Performance Considerations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Workflow Complexity"),": Complex workflows with many nodes may have longer execution times - consider breaking them into smaller, chained workflows"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"External API Calls"),": Network latency to external APIs can slow down workflows - use appropriate timeout settings"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Polling vs Webhooks"),": Prefer webhook triggers over polling when possible to reduce resource usage"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Concurrent Executions"),": n8n supports concurrent workflow executions, but be mindful of rate limits on connected services"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Data Volume"),": For large data processing tasks, consider triggering Shakudo jobs instead of processing directly in n8n")),(0,l.kt)("h3",{id:"troubleshooting-common-issues"},"Troubleshooting Common Issues"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Connection Timeouts"),": Verify internal service URLs are correct and services are running in their namespaces"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Authentication Failures"),": Check that credentials are properly configured in n8n's credential manager"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Workflow Stuck"),": Check the execution log for the specific node that's blocking - may need to adjust timeout settings"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Missing Data"),": Verify that the previous node's output format matches the expected input format of the next node"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Service Not Accessible"),": Ensure the stack component is installed, active, and has the correct service name in its namespace")),(0,l.kt)("h3",{id:"important-limitations"},"Important Limitations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Iframe Limitations"),": The n8n interface runs in an iframe, which may have some browser restrictions on cookies, storage, or popups depending on browser security settings"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Authentication"),": n8n authentication is separate from Shakudo dashboard authentication - users need n8n credentials to access workflows"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Feature Flag Required"),": The Plugins panel must be explicitly enabled by platform administrators via environment variable"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"No Direct GraphQL"),": The panel does not interact with Shakudo's GraphQL API directly - all n8n operations happen within the iframe"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Subdomain Dependency"),": Requires a properly configured ",(0,l.kt)("inlineCode",{parentName:"li"},"plugins")," subdomain pointing to the n8n instance")),(0,l.kt)("h3",{id:"installation-and-setup"},"Installation and Setup"),(0,l.kt)("p",null,"n8n must be installed as a Shakudo stack component before the Plugins panel becomes useful. The installation process:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Install n8n via Stack Components panel or Helm chart"),(0,l.kt)("li",{parentName:"ol"},"Configure the n8n namespace (typically ",(0,l.kt)("inlineCode",{parentName:"li"},"hyperplane-n8n"),")"),(0,l.kt)("li",{parentName:"ol"},"Set up Keycloak redirect URLs for SSO integration (optional)"),(0,l.kt)("li",{parentName:"ol"},"Create GraphQL mutation to register n8n as a platform app"),(0,l.kt)("li",{parentName:"ol"},"Enable the ",(0,l.kt)("inlineCode",{parentName:"li"},"pluginsPanelEnabled")," feature flag"),(0,l.kt)("li",{parentName:"ol"},"Access n8n through the Plugins panel")),(0,l.kt)("p",null,"For detailed installation instructions, refer to the n8n stack component documentation in ",(0,l.kt)("inlineCode",{parentName:"p"},"/stack-components/n8n/"),"."),(0,l.kt)("h3",{id:"workflow-development-tips"},"Workflow Development Tips"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Start Simple"),": Begin with basic workflows and gradually add complexity"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Use the Manual Trigger"),": Test workflows manually before activating production triggers"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Version Control"),": Export workflows as JSON files and store them in git for versioning"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Documentation"),": Add notes to workflow nodes to document logic and integration details"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Naming Conventions"),": Use clear, descriptive names for workflows and nodes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Resource Monitoring"),": Monitor workflow execution times and resource usage to optimize performance")))}c.isMDXComponent=!0}}]);