"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome to Shakudo","href":"/home","docId":"intro"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/Getting started/installation","docId":"Getting started/installation"},{"type":"link","label":"Log in","href":"/Getting started/login","docId":"Getting started/login"},{"type":"link","label":"Quick start","href":"/Getting started/getstarted","docId":"Getting started/getstarted"}],"href":"/category/getting-started"},{"type":"category","label":"Shakudo Platform","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Sessions - Develop","href":"/shakudo-platform-core/sessions","docId":"shakudo-platform-core/sessions"},{"type":"link","label":"Jobs - Deploy","href":"/shakudo-platform-core/jobs","docId":"shakudo-platform-core/jobs"},{"type":"link","label":"Services - Serving","href":"/shakudo-platform-core/service","docId":"shakudo-platform-core/service"},{"type":"category","label":"Admin Settings","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"PodSpecs","href":"/shakudo-platform-core/adminSettings/podspecs","docId":"shakudo-platform-core/adminSettings/podspecs"},{"type":"link","label":"Git Server","href":"/shakudo-platform-core/adminSettings/gitserver","docId":"shakudo-platform-core/adminSettings/gitserver"}],"href":"/category/admin-settings"},{"type":"link","label":"Shakudo API","href":"/shakudo-platform-core/shakudoApi","docId":"shakudo-platform-core/shakudoApi"},{"type":"link","label":"GraphQL","href":"/shakudo-platform-core/graphql","docId":"shakudo-platform-core/graphql"},{"type":"link","label":"FAQ","href":"/shakudo-platform-core/faq","docId":"shakudo-platform-core/faq"}],"href":"/category/shakudo-platform"},{"type":"category","label":"Shakudo Stack Components","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Data Ingestion","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Airbyte","href":"/shakudo-stack/dataIngestion/airbyte","docId":"shakudo-stack/dataIngestion/airbyte"}],"href":"/category/data-ingestion"},{"type":"category","label":"Data Transformation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"DBT","href":"/shakudo-stack/dataTransformation/dbt","docId":"shakudo-stack/dataTransformation/dbt"},{"type":"link","label":"DuckDB","href":"/shakudo-stack/dataTransformation/duckdb","docId":"shakudo-stack/dataTransformation/duckdb"}],"href":"/category/data-transformation"},{"type":"category","label":"Distributed Computing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/shakudo-stack/distributedComputing/overview","docId":"shakudo-stack/distributedComputing/overview"},{"type":"link","label":"Dask","href":"/shakudo-stack/distributedComputing/dask","docId":"shakudo-stack/distributedComputing/dask"},{"type":"link","label":"Ray","href":"/shakudo-stack/distributedComputing/ray","docId":"shakudo-stack/distributedComputing/ray"},{"type":"link","label":"Apache Spark","href":"/shakudo-stack/distributedComputing/spark","docId":"shakudo-stack/distributedComputing/spark"}],"href":"/category/distributed-computing"},{"type":"category","label":"CI/CD Pipeline","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Airflow","href":"/shakudo-stack/CI_CD/airflow","docId":"shakudo-stack/CI_CD/airflow"},{"type":"link","label":"Prefect","href":"/shakudo-stack/CI_CD/prefect","docId":"shakudo-stack/CI_CD/prefect"}],"href":"/category/cicd-pipeline"},{"type":"category","label":"Model Tracking","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MLFlow","href":"/shakudo-stack/modelTracking/mlflow","docId":"shakudo-stack/modelTracking/mlflow"},{"type":"link","label":"Weights and Biases","href":"/shakudo-stack/modelTracking/w&b","docId":"shakudo-stack/modelTracking/w&b"}],"href":"/category/model-tracking"},{"type":"category","label":"Model Serving","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"NVIDIA Triton","href":"/shakudo-stack/modelServing/triton","docId":"shakudo-stack/modelServing/triton"},{"type":"link","label":"TorchServe","href":"/shakudo-stack/modelServing/torchserve","docId":"shakudo-stack/modelServing/torchserve"},{"type":"link","label":"TensorFlow Serving","href":"/shakudo-stack/modelServing/tensorflowserving","docId":"shakudo-stack/modelServing/tensorflowserving"},{"type":"link","label":"FastAPI","href":"/shakudo-stack/modelServing/fastapi","docId":"shakudo-stack/modelServing/fastapi"},{"type":"link","label":"Flask","href":"/shakudo-stack/modelServing/flask","docId":"shakudo-stack/modelServing/flask"}],"href":"/category/model-serving"},{"type":"category","label":"Model Tracking","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Slack Alerts","href":"/shakudo-stack/monitoring/slack","docId":"shakudo-stack/monitoring/slack"},{"type":"link","label":"Grafana","href":"/shakudo-stack/monitoring/grafana","docId":"shakudo-stack/monitoring/grafana"}],"href":"/category/model-tracking-1"},{"type":"category","label":"Data Visualization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Superset","href":"/shakudo-stack/datavisualization/superset","docId":"shakudo-stack/datavisualization/superset"},{"type":"link","label":"Cube.js","href":"/shakudo-stack/datavisualization/cube","docId":"shakudo-stack/datavisualization/cube"},{"type":"link","label":"Streamlit","href":"/shakudo-stack/datavisualization/streamlit","docId":"shakudo-stack/datavisualization/streamlit"}],"href":"/category/data-visualization"},{"type":"link","label":"overview","href":"/shakudo-stack/overview","docId":"shakudo-stack/overview"}],"href":"/category/shakudo-stack-components"},{"type":"category","label":"Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a React App","href":"/Tutorials/buildareactapp","docId":"Tutorials/buildareactapp"}],"href":"/category/tutorial"}]},"docs":{"Getting started/getstarted":{"id":"Getting started/getstarted","title":"Quick start","description":"Shakudo Platform enables you to develop in a pre-config environments and deploy without docker built. The development environment are accessible through Jupyter notebooks, Codeserver and local IDE like VSCode.","sidebar":"tutorialSidebar"},"Getting started/installation":{"id":"Getting started/installation","title":"Installation","description":"Shakudo is a Kubernetes-based system that can be installed on any cloud or on-premises servers. Shakudo can be installed using Terraform and Helm. To install Shakudo, follow the steps below:","sidebar":"tutorialSidebar"},"Getting started/login":{"id":"Getting started/login","title":"Log in","description":"You can login to the Shakudo UI (usually at https://yourcompanyname.hyperplane.dev) with the following Single SignOn options","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Welcome to Shakudo","description":"Get started","sidebar":"tutorialSidebar"},"shakudo-platform-core/adminSettings/gitserver":{"id":"shakudo-platform-core/adminSettings/gitserver","title":"Git Server","description":"","sidebar":"tutorialSidebar"},"shakudo-platform-core/adminSettings/podspecs":{"id":"shakudo-platform-core/adminSettings/podspecs","title":"PodSpecs","description":"Sessions has a variety of fully managed Jupiter environments for developing VSCode notebooks, python files, and Jupyter notebooks.","sidebar":"tutorialSidebar"},"shakudo-platform-core/faq":{"id":"shakudo-platform-core/faq","title":"FAQ","description":"Here you can find answers to most commonly asked questions and problems encountered.","sidebar":"tutorialSidebar"},"shakudo-platform-core/graphql":{"id":"shakudo-platform-core/graphql","title":"GraphQL","description":"Many of the Shakudo Platform features are supported through the platform dashboard as well as GraphQL. GraphQL method is particularly useful when some actions are easier done algorithmically such as spinning up many jobs at once.","sidebar":"tutorialSidebar"},"shakudo-platform-core/jobs":{"id":"shakudo-platform-core/jobs","title":"Jobs - Deploy","description":"Pipelines are used to run a sequence of scripts from beginning to end. On Shakudo Platform you can build pipelines from VSCode notebooks, python files, or Jupyter notebooks.","sidebar":"tutorialSidebar"},"shakudo-platform-core/service":{"id":"shakudo-platform-core/service","title":"Services - Serving","description":"Services are used to create live pipeline jobs. In contrast to regular pipeline jobs, which are batch jobs or a series of steps that run end-to-end, you can create jobs from never-ending notebooks or scripts as services. This is particularly useful for things that need to be continuously live such as servicing an application, or live real-time data processing.","sidebar":"tutorialSidebar"},"shakudo-platform-core/sessions":{"id":"shakudo-platform-core/sessions","title":"Sessions - Develop","description":"Pre-configured development environment","sidebar":"tutorialSidebar"},"shakudo-platform-core/shakudoApi":{"id":"shakudo-platform-core/shakudoApi","title":"Shakudo API","description":"Notebook_Common","sidebar":"tutorialSidebar"},"shakudo-stack/CI_CD/airflow":{"id":"shakudo-stack/CI_CD/airflow","title":"Airflow","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/CI_CD/prefect":{"id":"shakudo-stack/CI_CD/prefect","title":"Prefect","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/dataIngestion/airbyte":{"id":"shakudo-stack/dataIngestion/airbyte","title":"Airbyte","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/dataTransformation/dbt":{"id":"shakudo-stack/dataTransformation/dbt","title":"DBT","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/dataTransformation/duckdb":{"id":"shakudo-stack/dataTransformation/duckdb","title":"DuckDB","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/datavisualization/cube":{"id":"shakudo-stack/datavisualization/cube","title":"Cube.js","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/datavisualization/streamlit":{"id":"shakudo-stack/datavisualization/streamlit","title":"Streamlit","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/datavisualization/superset":{"id":"shakudo-stack/datavisualization/superset","title":"Superset","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/distributedComputing/dask":{"id":"shakudo-stack/distributedComputing/dask","title":"Dask","description":"Dask is a flexible open source distributed framework for parallel computing. It has similar APIs to Numpy and Pandas, is an ideal choice for parallelizing Numpy, Pandas and List based code.","sidebar":"tutorialSidebar"},"shakudo-stack/distributedComputing/overview":{"id":"shakudo-stack/distributedComputing/overview","title":"Overview","description":"The Shakudo Platform supports many distributed computing methods.","sidebar":"tutorialSidebar"},"shakudo-stack/distributedComputing/ray":{"id":"shakudo-stack/distributedComputing/ray","title":"Ray","description":"Ray is an open source project that distributed frameworks that has a more support for deep learning and reinforcement learning. It has a rich set of libraries and integrations built on a flexible distributed execution framework, is ideal choice for parallelizing model training and hyper-parameter tuning.","sidebar":"tutorialSidebar"},"shakudo-stack/distributedComputing/spark":{"id":"shakudo-stack/distributedComputing/spark","title":"Apache Spark","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/modelServing/fastapi":{"id":"shakudo-stack/modelServing/fastapi","title":"FastAPI","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/modelServing/flask":{"id":"shakudo-stack/modelServing/flask","title":"Flask","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/modelServing/tensorflowserving":{"id":"shakudo-stack/modelServing/tensorflowserving","title":"TensorFlow Serving","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/modelServing/torchserve":{"id":"shakudo-stack/modelServing/torchserve","title":"TorchServe","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/modelServing/triton":{"id":"shakudo-stack/modelServing/triton","title":"NVIDIA Triton","description":"The Shakudo Platform comes with a build-in NVIDIA Triton Inference Server that simplifies the deployment of AI models at scale in production. Triton is an open-source inference serving software that lets teams deploy trained AI models from any framework (TensorFlow, NVIDIA\xae TensorRT\xae, PyTorch, ONNX Runtime, or custom) from local storage or cloud platform on any GPU- or CPU-based infrastructure (cloud, data center, or edge).","sidebar":"tutorialSidebar"},"shakudo-stack/modelTracking/mlflow":{"id":"shakudo-stack/modelTracking/mlflow","title":"MLFlow","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/modelTracking/w&b":{"id":"shakudo-stack/modelTracking/w&b","title":"Weights and Biases","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/monitoring/grafana":{"id":"shakudo-stack/monitoring/grafana","title":"Grafana","description":"","sidebar":"tutorialSidebar"},"shakudo-stack/monitoring/slack":{"id":"shakudo-stack/monitoring/slack","title":"Slack Alerts","description":"Slack alerts are available for failed or timeout jobs. Slack messages are sent when all retries have failed. To get Slack alerts set up you must contact our customer success team.","sidebar":"tutorialSidebar"},"shakudo-stack/overview":{"id":"shakudo-stack/overview","title":"overview","description":"","sidebar":"tutorialSidebar"},"Tutorials/buildareactapp":{"id":"Tutorials/buildareactapp","title":"Create a React App","description":"You can create a React application on the Shakudo Platform as a service. Follow the steps below to get started!","sidebar":"tutorialSidebar"}}}')}}]);