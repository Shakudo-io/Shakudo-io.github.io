"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome to Shakudo","href":"/home","docId":"intro"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/Getting started/installation","docId":"Getting started/installation"},{"type":"link","label":"Log in","href":"/Getting started/login","docId":"Getting started/login"},{"type":"link","label":"Quick start","href":"/Getting started/getstarted","docId":"Getting started/getstarted"}],"href":"/category/getting-started"},{"type":"category","label":"Shakudo Platform","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Sessions - Develop","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to Sessions","href":"/shakudo-platform-core/sessions/","docId":"shakudo-platform-core/sessions/sessions"},{"type":"link","label":"Integrating git into Sessions Jupyterlab","href":"/shakudo-platform-core/sessions/versionControl","docId":"shakudo-platform-core/sessions/versionControl"}],"href":"/category/sessions---develop"},{"type":"link","label":"Jobs - Deploy","href":"/shakudo-platform-core/jobs","docId":"shakudo-platform-core/jobs"},{"type":"link","label":"Services - Serving","href":"/shakudo-platform-core/service","docId":"shakudo-platform-core/service"},{"type":"category","label":"Admin Settings","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"PodSpecs","href":"/shakudo-platform-core/adminSettings/podspecs","docId":"shakudo-platform-core/adminSettings/podspecs"},{"type":"link","label":"Git Server","href":"/shakudo-platform-core/adminSettings/gitserver","docId":"shakudo-platform-core/adminSettings/gitserver"}],"href":"/category/admin-settings"},{"type":"link","label":"Shakudo API","href":"/shakudo-platform-core/shakudoApi","docId":"shakudo-platform-core/shakudoApi"},{"type":"link","label":"GraphQL","href":"/shakudo-platform-core/graphql","docId":"shakudo-platform-core/graphql"},{"type":"link","label":"FAQ","href":"/shakudo-platform-core/faq","docId":"shakudo-platform-core/faq"}],"href":"/category/shakudo-platform"},{"type":"category","label":"Shakudo Stack Components","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Data Ingestion","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Airbyte","href":"/Shakudo-stack/dataIngestion/airbyte","docId":"Shakudo-stack/dataIngestion/airbyte"}],"href":"/category/data-ingestion"},{"type":"category","label":"Data Transformation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"DBT","href":"/Shakudo-stack/dataTransformation/dbt","docId":"Shakudo-stack/dataTransformation/dbt"},{"type":"link","label":"DuckDB","href":"/Shakudo-stack/dataTransformation/duckdb","docId":"Shakudo-stack/dataTransformation/duckdb"}],"href":"/category/data-transformation"},{"type":"category","label":"Distributed Computing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/Shakudo-stack/distributedComputing/overview","docId":"Shakudo-stack/distributedComputing/overview"},{"type":"link","label":"Dask","href":"/Shakudo-stack/distributedComputing/dask","docId":"Shakudo-stack/distributedComputing/dask"},{"type":"link","label":"Ray","href":"/Shakudo-stack/distributedComputing/ray","docId":"Shakudo-stack/distributedComputing/ray"},{"type":"link","label":"Apache Spark","href":"/Shakudo-stack/distributedComputing/spark","docId":"Shakudo-stack/distributedComputing/spark"}],"href":"/category/distributed-computing"},{"type":"category","label":"CI/CD Pipeline","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Airflow","href":"/Shakudo-stack/CI_CD/airflow","docId":"Shakudo-stack/CI_CD/airflow"},{"type":"link","label":"Prefect","href":"/Shakudo-stack/CI_CD/prefect","docId":"Shakudo-stack/CI_CD/prefect"}],"href":"/category/cicd-pipeline"},{"type":"category","label":"Model Tracking","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MLFlow","href":"/Shakudo-stack/modelTracking/mlflow","docId":"Shakudo-stack/modelTracking/mlflow"},{"type":"link","label":"Weights and Biases","href":"/Shakudo-stack/modelTracking/w&b","docId":"Shakudo-stack/modelTracking/w&b"}],"href":"/category/model-tracking"},{"type":"category","label":"Model Serving","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"NVIDIA Triton","href":"/Shakudo-stack/modelServing/triton","docId":"Shakudo-stack/modelServing/triton"},{"type":"link","label":"TorchServe","href":"/Shakudo-stack/modelServing/torchserve","docId":"Shakudo-stack/modelServing/torchserve"},{"type":"link","label":"TensorFlow Serving","href":"/Shakudo-stack/modelServing/tensorflowserving","docId":"Shakudo-stack/modelServing/tensorflowserving"},{"type":"link","label":"FastAPI","href":"/Shakudo-stack/modelServing/fastapi","docId":"Shakudo-stack/modelServing/fastapi"},{"type":"link","label":"Flask","href":"/Shakudo-stack/modelServing/flask","docId":"Shakudo-stack/modelServing/flask"}],"href":"/category/model-serving"},{"type":"category","label":"Model Tracking","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Slack Alerts","href":"/Shakudo-stack/monitoring/slack","docId":"Shakudo-stack/monitoring/slack"},{"type":"link","label":"Grafana","href":"/Shakudo-stack/monitoring/grafana","docId":"Shakudo-stack/monitoring/grafana"}],"href":"/category/model-tracking-1"},{"type":"category","label":"Data Visualization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Superset","href":"/Shakudo-stack/datavisualization/superset","docId":"Shakudo-stack/datavisualization/superset"},{"type":"link","label":"Cube.js","href":"/Shakudo-stack/datavisualization/cube","docId":"Shakudo-stack/datavisualization/cube"},{"type":"link","label":"Streamlit","href":"/Shakudo-stack/datavisualization/streamlit","docId":"Shakudo-stack/datavisualization/streamlit"}],"href":"/category/data-visualization"}],"href":"/category/shakudo-stack-components"},{"type":"category","label":"Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a React App","href":"/Tutorials/buildareactapp","docId":"Tutorials/buildareactapp"},{"type":"link","label":"Confluence Q&A App on Shakudo with Langchain and ChatGPT","href":"/Tutorials/confluenceapp","docId":"Tutorials/confluenceapp"}],"href":"/category/tutorial"}]},"docs":{"Getting started/getstarted":{"id":"Getting started/getstarted","title":"Quick start","description":"Shakudo Platform enables you to develop in a pre-config environments and deploy without docker built. The development environment are accessible through Jupyter notebooks, Code-server and local IDE like VSCode.","sidebar":"tutorialSidebar"},"Getting started/installation":{"id":"Getting started/installation","title":"Installation","description":"Shakudo is a Kubernetes-based system that can be installed on any cloud or on-premises servers. Shakudo can be installed using Terraform and Helm. To install Shakudo, follow the steps below:","sidebar":"tutorialSidebar"},"Getting started/login":{"id":"Getting started/login","title":"Log in","description":"You can login to the Shakudo UI (usually at https://yourcompanyname.hyperplane.dev) with the following Single SignOn options","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Welcome to Shakudo","description":"Get started","sidebar":"tutorialSidebar"},"shakudo-platform-core/adminSettings/gitserver":{"id":"shakudo-platform-core/adminSettings/gitserver","title":"Git Server","description":"Coming soon","sidebar":"tutorialSidebar"},"shakudo-platform-core/adminSettings/podspecs":{"id":"shakudo-platform-core/adminSettings/podspecs","title":"PodSpecs","description":"Sessions has a variety of fully managed Jupiter environments for developing VSCode notebooks, python files, and Jupyter notebooks.","sidebar":"tutorialSidebar"},"shakudo-platform-core/faq":{"id":"shakudo-platform-core/faq","title":"FAQ","description":"Here you can find answers to most commonly asked questions and problems encountered.","sidebar":"tutorialSidebar"},"shakudo-platform-core/graphql":{"id":"shakudo-platform-core/graphql","title":"GraphQL","description":"Many of the Shakudo Platform features are supported through the platform dashboard as well as GraphQL. GraphQL method is particularly useful when some actions are easier done algorithmically such as spinning up many jobs at once.","sidebar":"tutorialSidebar"},"shakudo-platform-core/jobs":{"id":"shakudo-platform-core/jobs","title":"Jobs - Deploy","description":"Pipelines are used to run a sequence of scripts from beginning to end. On Shakudo Platform you can build pipelines from VS Code notebooks, python files, or Jupyter notebooks.","sidebar":"tutorialSidebar"},"shakudo-platform-core/service":{"id":"shakudo-platform-core/service","title":"Services - Serving","description":"Services are used to create live pipeline jobs. In contrast to regular pipeline jobs, which are batch jobs or a series of steps that run end-to-end, you can create jobs from never-ending notebooks or scripts as services. This is particularly useful for things that need to be continuously live such as servicing an application, or live real-time data processing.","sidebar":"tutorialSidebar"},"shakudo-platform-core/sessions/sessions":{"id":"shakudo-platform-core/sessions/sessions","title":"Introduction to Sessions","description":"Pre-configured development environment","sidebar":"tutorialSidebar"},"shakudo-platform-core/sessions/versionControl":{"id":"shakudo-platform-core/sessions/versionControl","title":"Integrating git into Sessions Jupyterlab","description":"Jupyter users have often had difficulties applying version control with git to Jupyter notebooks, as commit histories have not clearly displayed changes made to Jupyter cell code, as would be present with traditional source code. Instead commit diffs have been cluttered by metadata updates for the notebook itself. As part of the nbdev2 package, developers at fast.ai have created a series of git workflows to address these issues.","sidebar":"tutorialSidebar"},"shakudo-platform-core/shakudoApi":{"id":"shakudo-platform-core/shakudoApi","title":"Shakudo API","description":"Notebook_Common","sidebar":"tutorialSidebar"},"Shakudo-stack/CI_CD/airflow":{"id":"Shakudo-stack/CI_CD/airflow","title":"Airflow","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/CI_CD/prefect":{"id":"Shakudo-stack/CI_CD/prefect","title":"Prefect","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/dataIngestion/airbyte":{"id":"Shakudo-stack/dataIngestion/airbyte","title":"Airbyte","description":"Coming Soon","sidebar":"tutorialSidebar"},"Shakudo-stack/dataTransformation/dbt":{"id":"Shakudo-stack/dataTransformation/dbt","title":"DBT","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/dataTransformation/duckdb":{"id":"Shakudo-stack/dataTransformation/duckdb","title":"DuckDB","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/datavisualization/cube":{"id":"Shakudo-stack/datavisualization/cube","title":"Cube.js","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/datavisualization/streamlit":{"id":"Shakudo-stack/datavisualization/streamlit","title":"Streamlit","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/datavisualization/superset":{"id":"Shakudo-stack/datavisualization/superset","title":"Superset","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/distributedComputing/dask":{"id":"Shakudo-stack/distributedComputing/dask","title":"Dask","description":"Dask is a flexible open source distributed framework for parallel computing. It has similar APIs to NumPy and Pandas, is an ideal choice for parallelizing NumPy, Pandas and List based code.","sidebar":"tutorialSidebar"},"Shakudo-stack/distributedComputing/overview":{"id":"Shakudo-stack/distributedComputing/overview","title":"Overview","description":"The Shakudo Platform supports many distributed computing methods.","sidebar":"tutorialSidebar"},"Shakudo-stack/distributedComputing/ray":{"id":"Shakudo-stack/distributedComputing/ray","title":"Ray","description":"Ray is an open source project that distributed frameworks that has a more support for deep learning and reinforcement learning. It has a rich set of libraries and integrations built on a flexible distributed execution framework, is ideal choice for parallelizing model training and hyper-parameter tuning.","sidebar":"tutorialSidebar"},"Shakudo-stack/distributedComputing/spark":{"id":"Shakudo-stack/distributedComputing/spark","title":"Apache Spark","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/modelServing/fastapi":{"id":"Shakudo-stack/modelServing/fastapi","title":"FastAPI","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/modelServing/flask":{"id":"Shakudo-stack/modelServing/flask","title":"Flask","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/modelServing/tensorflowserving":{"id":"Shakudo-stack/modelServing/tensorflowserving","title":"TensorFlow Serving","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/modelServing/torchserve":{"id":"Shakudo-stack/modelServing/torchserve","title":"TorchServe","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/modelServing/triton":{"id":"Shakudo-stack/modelServing/triton","title":"NVIDIA Triton","description":"The Shakudo Platform comes with a build-in NVIDIA Triton Inference Server that simplifies the deployment of AI models at scale in production. Triton is an open-source inference serving software that lets teams deploy trained AI models from any framework (TensorFlow, NVIDIA\xae TensorRT\xae, PyTorch, ONNX Runtime, or custom) from local storage or cloud platform on any GPU- or CPU-based infrastructure (cloud, data center, or edge).","sidebar":"tutorialSidebar"},"Shakudo-stack/modelTracking/mlflow":{"id":"Shakudo-stack/modelTracking/mlflow","title":"MLFlow","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/modelTracking/w&b":{"id":"Shakudo-stack/modelTracking/w&b","title":"Weights and Biases","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/monitoring/grafana":{"id":"Shakudo-stack/monitoring/grafana","title":"Grafana","description":"Coming soon","sidebar":"tutorialSidebar"},"Shakudo-stack/monitoring/slack":{"id":"Shakudo-stack/monitoring/slack","title":"Slack Alerts","description":"Slack alerts are available for failed or timeout jobs. Slack messages are sent when all retries have failed. To get Slack alerts set up you must contact our customer success team.","sidebar":"tutorialSidebar"},"Tutorials/buildareactapp":{"id":"Tutorials/buildareactapp","title":"Create a React App","description":"You can create a React application on the Shakudo Platform as a service. Follow the steps below to get started!","sidebar":"tutorialSidebar"},"Tutorials/confluenceapp":{"id":"Tutorials/confluenceapp","title":"Confluence Q&A App on Shakudo with Langchain and ChatGPT","description":"Chatbot interactions have been revolutionized with advancements in AI and NLP like OpenAI\'s GPT and LangChain. In this post, we\'ll explore how to use Shakudo to simplify and enhance the process of building a Q&A app for an Internal Knowledge base from conceptualization to deployment. We chose Confluence for this tutorial because it\'s an optimal platform for creating internal knowledge bases. Its intuitive interface supports efficient information management, and its advanced search capabilities ensure that you find what you need without unnecessary delays.","sidebar":"tutorialSidebar"}}}')}}]);