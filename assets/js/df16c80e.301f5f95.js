"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5936],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},584:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],o={sidebar_position:11},s="Shakudo Cloud Shell",u={unversionedId:"shakudo-platform-core/cloudshell",id:"shakudo-platform-core/cloudshell",title:"Shakudo Cloud Shell",description:"Available on Shakudo version 3.34.2+",source:"@site/docs/shakudo-platform-core/cloudshell.md",sourceDirName:"shakudo-platform-core",slug:"/shakudo-platform-core/cloudshell",permalink:"/shakudo-platform-core/cloudshell",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Image Builder",permalink:"/shakudo-platform-core/image_builder"},next:{title:"Shakudo Stack Components",permalink:"/category/shakudo-stack-components"}},c={},p=[{value:"Installing Stack Components using their Shakudo Helm Charts",id:"installing-stack-components-using-their-shakudo-helm-charts",level:2},{value:"What are Helm Charts?",id:"what-are-helm-charts",level:3},{value:"Tools and Environment",id:"tools-and-environment",level:3},{value:"Step-by-Step Guide of installing a Stack Component",id:"step-by-step-guide-of-installing-a-stack-component",level:3},{value:"1. Dry Run the Installation (Helm <code>--dry-run=server</code>)",id:"1-dry-run-the-installation-helm---dry-runserver",level:4},{value:"2. Installing the n8n Stack Component (Example)",id:"2-installing-the-n8n-stack-component-example",level:4},{value:"3. Verifying Installation",id:"3-verifying-installation",level:4},{value:"4. Customizing Installation with <code>valuesOverride.yaml</code>",id:"4-customizing-installation-with-valuesoverrideyaml",level:4},{value:"Important Notes",id:"important-notes",level:3}],d={toc:p};function m(e){var t=e.components,o=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"shakudo-cloud-shell"},"Shakudo Cloud Shell"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Available on Shakudo version 3.34.2+")),(0,r.kt)("p",null,"The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Shakudo Cloud Shell"))," is an all-in-one, browser-based command-line interface designed to offer Shakudo users seamless and secure access to their cloud environments. With admin ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl")," permissions, it allows users to perform administrative tasks, granting full control over their Shakudo clusters without the need for external setups or local configurations."),(0,r.kt)("p",null,"This versatile tool streamlines the management of Shakudo resources by enabling direct execution of development, testing, deployment, and troubleshooting tasks. Whether it's deploying applications, inspecting resources, or managing configurations, the Shakudo Cloud Shell ensures a frictionless experience by providing a fully pre-configured terminal with all the necessary tools."),(0,r.kt)("p",null,"Equipped with essential tools such as ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"helm"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"k9s"),", users can efficiently interact with Kubernetes clusters, manage Helm charts, and monitor resources. Additionally, it comes integrated with advanced AI-powered utilities like ",(0,r.kt)("inlineCode",{parentName:"p"},"ai-shell"),", enhancing productivity by providing intelligent command suggestions and automation capabilities."),(0,r.kt)("p",null,"In essence, the Shakudo Cloud Shell simplifies cloud operations by offering a robust, user-friendly environment tailored for developers, DevOps teams, and data scientists working within the Shakudo ecosystem."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"shakudo cloud shell",src:n(8111).Z,width:"3024",height:"1520"})),(0,r.kt)("h2",{id:"installing-stack-components-using-their-shakudo-helm-charts"},"Installing Stack Components using their Shakudo Helm Charts"),(0,r.kt)("h3",{id:"what-are-helm-charts"},"What are Helm Charts?"),(0,r.kt)("p",null,"Helm is a package manager for Kubernetes that simplifies the deployment and management of applications. A Helm chart is a collection of YAML templates and configurations that describe a set of Kubernetes resources required to deploy an application."),(0,r.kt)("h3",{id:"tools-and-environment"},"Tools and Environment"),(0,r.kt)("p",null,"You will be using the Shakudo Cloud Shell, which comes pre-installed with Helm, Kubernetes CLI (",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl"),"), and other essential tools. Since permissions are already configured, you can directly install charts from the Shakudo registry."),(0,r.kt)("h3",{id:"step-by-step-guide-of-installing-a-stack-component"},"Step-by-Step Guide of installing a Stack Component"),(0,r.kt)("h4",{id:"1-dry-run-the-installation-helm---dry-runserver"},"1. Dry Run the Installation (Helm ",(0,r.kt)("inlineCode",{parentName:"h4"},"--dry-run=server"),")"),(0,r.kt)("p",null,"Before performing the actual installation, it\u2019s a good practice to execute a dry run to ensure that the command will succeed without errors:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm upgrade --install n8n oci://us-docker.pkg.dev/shakudo-417723/charts/n8n --namespace hyperplane-n8n-test --version 1.2.4 --create-namespace --dry-run=server --debug\n")),(0,r.kt)("p",null,"This will simulate the installation and output what changes will be made, helping you verify that the installation parameters are correct."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"shakudo cloud shell Helm dry-run",src:n(1345).Z,width:"3024",height:"1526"})),(0,r.kt)("h4",{id:"2-installing-the-n8n-stack-component-example"},"2. Installing the n8n Stack Component (Example)"),(0,r.kt)("p",null,"Let\u2019s assume you want to install the ",(0,r.kt)("inlineCode",{parentName:"p"},"n8n")," stack component, version ",(0,r.kt)("inlineCode",{parentName:"p"},"1.2.4"),", in the ",(0,r.kt)("inlineCode",{parentName:"p"},"hyperplane-n8n-test")," namespace."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Run the following command to install or upgrade the ",(0,r.kt)("inlineCode",{parentName:"li"},"n8n")," chart:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm upgrade --install n8n oci://us-docker.pkg.dev/shakudo-417723/charts/n8n --namespace hyperplane-n8n-test --version 1.2.4 --create-namespace\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"shakudo cloud shell Helm install",src:n(4435).Z,width:"3013",height:"1510"})),(0,r.kt)("p",null,"Explanation:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"upgrade --install"),": Ensures that if the release does not exist, it will be installed; otherwise, it will be upgraded."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"n8n"),": This is the release name you assign. You can choose any meaningful name."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"oci://us-docker.pkg.dev/shakudo-417723/charts/n8n"),": Refers to the ",(0,r.kt)("inlineCode",{parentName:"li"},"n8n")," Helm chart stored in the Shakudo registry."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--namespace hyperplane-n8n-test"),": Specifies the Kubernetes namespace where the component will be installed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--version 1.2.4"),": Ensures that version ",(0,r.kt)("inlineCode",{parentName:"li"},"1.2.4")," of the ",(0,r.kt)("inlineCode",{parentName:"li"},"n8n")," chart is installed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--create-namespace"),": Creates the namespace if it does not already exist.")),(0,r.kt)("h4",{id:"3-verifying-installation"},"3. Verifying Installation"),(0,r.kt)("p",null,"After the installation completes, verify the deployed resources:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"List Helm releases:")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm list --namespace hyperplane-n8n-test\n")))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"shakudo cloud shell Helm list",src:n(7081).Z,width:"3020",height:"732"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Check Kubernetes resources:")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get all --namespace hyperplane-n8n-test\n")))),(0,r.kt)("p",null,"This will display all the resources associated with the ",(0,r.kt)("inlineCode",{parentName:"p"},"n8n")," stack component, such as pods, services, and deployments."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"shakudo cloud shell Helm list",src:n(8480).Z,width:"3024",height:"794"})),(0,r.kt)("h4",{id:"4-customizing-installation-with-valuesoverrideyaml"},"4. Customizing Installation with ",(0,r.kt)("inlineCode",{parentName:"h4"},"valuesOverride.yaml")),(0,r.kt)("p",null,"If you need to customize the deployment, you can use a ",(0,r.kt)("inlineCode",{parentName:"p"},"valuesOverride.yaml")," file to override default chart values. Here\u2019s an example ",(0,r.kt)("inlineCode",{parentName:"p"},"valuesOverride.yaml")," file for ",(0,r.kt)("inlineCode",{parentName:"p"},"n8n"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# valuesOverride.yaml - you may want to name this different as there may be multiple values file for different stack components\nresources:\n  limits:\n    cpu: "5000m"\n    memory: "12Gi"\n')),(0,r.kt)("p",null,"To install the chart with custom values, use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm upgrade --install n8n oci://us-docker.pkg.dev/shakudo-417723/charts/n8n --namespace hyperplane-n8n-test -f valuesOverride.yaml\n")),(0,r.kt)("h3",{id:"important-notes"},"Important Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Permissions:")," Shakudo Cloud Shell is pre-configured with the necessary permissions, so you do not need to set up additional roles or service accounts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Namespace Management:")," Always specify the correct namespace during installation to avoid conflicts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Version Control:")," It\u2019s important to specify the exact version of the Helm chart you want to deploy to ensure consistency across environments."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Dry Run Before Install:")," Using ",(0,r.kt)("inlineCode",{parentName:"li"},"--dry-run")," before actual installation helps catch potential issues in advance and ensures a smooth deployment.")),(0,r.kt)("p",null,"By following these steps, even users new to Kubernetes and Helm can successfully deploy and manage Stack Components using the Shakudo Cloud Shell."))}m.isMDXComponent=!0},8111:function(e,t,n){t.Z=n.p+"assets/images/cloud_shell-98fe3ea5c715a01cfa4db7790dc698c2.png"},1345:function(e,t,n){t.Z=n.p+"assets/images/cloud_shell_helm_dry_run-3ee4f6ddc005c6e1d9573b96f7fca98a.png"},4435:function(e,t,n){t.Z=n.p+"assets/images/cloud_shell_helm_install-b416f254b4ceb6d7282d1c224d5a191c.png"},7081:function(e,t,n){t.Z=n.p+"assets/images/cloud_shell_helm_list-7cc849973e88b42349641fd6cf151f0b.png"},8480:function(e,t,n){t.Z=n.p+"assets/images/cloud_shell_kubectl_list-1029afef7472c0f53f995ca93fd0bbbf.png"}}]);