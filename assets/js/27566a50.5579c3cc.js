"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5357],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return c}});var i=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},l=Object.keys(e);for(i=0;i<l.length;i++)a=l[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)a=l[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=i.createContext({}),m=function(e){var t=i.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=m(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=m(a),c=n,g=d["".concat(s,".").concat(c)]||d[c]||u[c]||l;return a?i.createElement(g,r(r({ref:t},p),{},{components:a})):i.createElement(g,r({ref:t},p))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,r=new Array(l);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var m=2;m<l;m++)r[m]=a[m];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},187:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return u}});var i=a(7462),n=a(3366),l=(a(7294),a(3905)),r=["components"],o={},s="Container Images",m={unversionedId:"developer-docs/features/container-images",id:"developer-docs/features/container-images",title:"Container Images",description:"Overview",source:"@site/docs/developer-docs/features/container-images.md",sourceDirName:"developer-docs/features",slug:"/developer-docs/features/container-images",permalink:"/developer-docs/features/container-images",draft:!1,tags:[],version:"current",lastUpdatedBy:"chyuen-devsentient",lastUpdatedAt:1760986571,formattedLastUpdatedAt:"10/20/2025",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cloud SQL Proxy",permalink:"/developer-docs/features/cloud-sql-proxy"},next:{title:"Data Stack Graph",permalink:"/developer-docs/features/data-stack-graph"}},p={},u=[{value:"Overview",id:"overview",level:2},{value:"Access &amp; Location",id:"access--location",level:2},{value:"Key Capabilities",id:"key-capabilities",level:2},{value:"Build Docker Images from Git",id:"build-docker-images-from-git",level:3},{value:"Tag and Version Management",id:"tag-and-version-management",level:3},{value:"Clone Existing Builds",id:"clone-existing-builds",level:3},{value:"Convert to Environment Config",id:"convert-to-environment-config",level:3},{value:"Track Build Status",id:"track-build-status",level:3},{value:"Filter and Search",id:"filter-and-search",level:3},{value:"Pin Important Images",id:"pin-important-images",level:3},{value:"User Interface",id:"user-interface",level:2},{value:"Main View",id:"main-view",level:3},{value:"Dialogs &amp; Modals",id:"dialogs--modals",level:3},{value:"Actions Menu",id:"actions-menu",level:3},{value:"Technical Details",id:"technical-details",level:2},{value:"GraphQL Operations",id:"graphql-operations",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"State Management (Jotai Atoms)",id:"state-management-jotai-atoms",level:3},{value:"Common Workflows",id:"common-workflows",level:2},{value:"Building a New Container Image",id:"building-a-new-container-image",level:3},{value:"Cloning and Modifying an Existing Image",id:"cloning-and-modifying-an-existing-image",level:3},{value:"Converting an Image to an Environment Config",id:"converting-an-image-to-an-environment-config",level:3},{value:"Filtering and Finding Images",id:"filtering-and-finding-images",level:3},{value:"Viewing Detailed Build Information",id:"viewing-detailed-build-information",level:3},{value:"Deleting or Canceling Builds",id:"deleting-or-canceling-builds",level:3},{value:"Related Features",id:"related-features",level:2},{value:"Notes &amp; Tips",id:"notes--tips",level:2}],d={toc:u};function c(e){var t=e.components,a=(0,n.Z)(e,r);return(0,l.kt)("wrapper",(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"container-images"},"Container Images"),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"The Container Images panel (also known as the Image Builder) enables users to build custom Docker container images from Dockerfiles stored in Git repositories. This feature integrates with Harbor registry to store built images and provides a complete workflow for creating, managing, and tracking container image builds. Users can build images from any branch or commit, tag them for organization, view build logs, and convert successful builds into Environment Configs for use in Shakudo workloads."),(0,l.kt)("h2",{id:"access--location"},"Access & Location"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Route"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"?panel=container-images")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Navigation"),": Shakudo Objects \u2192 Container Images"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Access Requirements"),": None (available to all authenticated users)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Feature Flags"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"harborImageBuilderEnabled")," - Harbor registry must be installed and active for this feature to be available")),(0,l.kt)("h2",{id:"key-capabilities"},"Key Capabilities"),(0,l.kt)("h3",{id:"build-docker-images-from-git"},"Build Docker Images from Git"),(0,l.kt)("p",null,"Create custom container images by specifying a Dockerfile path in a Git repository. The system builds the image using Harbor's in-cluster image builder and stores the resulting artifact in the Harbor registry."),(0,l.kt)("h3",{id:"tag-and-version-management"},"Tag and Version Management"),(0,l.kt)("p",null,"Apply multiple tags to images for easy identification and versioning. Tags are displayed as chips throughout the interface and can be used to organize and track different versions of the same image."),(0,l.kt)("h3",{id:"clone-existing-builds"},"Clone Existing Builds"),(0,l.kt)("p",null,"Duplicate existing image build configurations to quickly create new builds with minor modifications. All settings (image name, tags, Git repository, branch, commit, and Dockerfile path) are pre-populated from the source build."),(0,l.kt)("h3",{id:"convert-to-environment-config"},"Convert to Environment Config"),(0,l.kt)("p",null,"Transform successful image builds directly into Environment Configs (EC), enabling the custom images to be used as base containers for Sessions, Jobs, and Microservices throughout the platform."),(0,l.kt)("h3",{id:"track-build-status"},"Track Build Status"),(0,l.kt)("p",null,"Monitor the progress of image builds in real-time with status indicators (Building, Built, Failed, Local). View live logs during active builds and access historical logs through integrated Grafana links."),(0,l.kt)("h3",{id:"filter-and-search"},"Filter and Search"),(0,l.kt)("p",null,"Apply filters by image name, digest, creation date, status, branch name, Git commit, and owner email. Quick search functionality allows searching across image names and digests simultaneously."),(0,l.kt)("h3",{id:"pin-important-images"},"Pin Important Images"),(0,l.kt)("p",null,"Pin frequently used or important images to keep them at the top of the table for easy access."),(0,l.kt)("h2",{id:"user-interface"},"User Interface"),(0,l.kt)("h3",{id:"main-view"},"Main View"),(0,l.kt)("p",null,"The main panel displays a hierarchical data grid showing all container images grouped by image name. Each image name acts as a parent row that can be expanded to reveal historical builds of that image, sorted by creation date (newest first). The table supports pagination with 20 items per page and automatically refreshes every 30 seconds to show updated build statuses."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Table Columns:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Image Name")," (expandable group) - Shows the base image name with pin button and detail link"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Tag")," - Displays image tags as chips with a menu for viewing all tags when multiple exist"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Status")," - Visual status indicator (Building, Built, Failed, Local)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Logs")," - Live log viewer for active builds and Grafana link for historical logs"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Build Date")," - Timestamp of when the build was initiated (YYYY-MM-DD HH:mm:ss format)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Git Commit ID")," - Copyable commit hash used for the build"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"SHA256 Hash")," - Copyable image digest identifier"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Actions")," - Dropdown menu with available operations")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Toolbar Features:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Filter button with comprehensive filtering dialog"),(0,l.kt)("li",{parentName:"ul"},"Column visibility toggle"),(0,l.kt)("li",{parentName:"ul"},"Refresh button"),(0,l.kt)("li",{parentName:"ul"},"Quick search field"),(0,l.kt)("li",{parentName:"ul"},"Reset Filters button"),(0,l.kt)("li",{parentName:"ul"},"Active filter chips with individual remove buttons")),(0,l.kt)("h3",{id:"dialogs--modals"},"Dialogs & Modals"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Build Docker Image Dialog")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Purpose: Create a new container image build job"),(0,l.kt)("li",{parentName:"ul"},"Fields:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Image Name (required) - Name for the container image"),(0,l.kt)("li",{parentName:"ul"},"Tags (required, multiple) - Press Enter to add each tag"),(0,l.kt)("li",{parentName:"ul"},"Git Repository (required, autocomplete) - Select from configured Git repositories"),(0,l.kt)("li",{parentName:"ul"},"Branch (required) - Git branch name"),(0,l.kt)("li",{parentName:"ul"},"Commit (optional) - Specific commit hash, uses branch HEAD if omitted"),(0,l.kt)("li",{parentName:"ul"},"Dockerfile Path (required, autocomplete) - Relative path from repository root to Dockerfile"))),(0,l.kt)("li",{parentName:"ul"},"Actions: Cancel, Create (with loading indicator)"),(0,l.kt)("li",{parentName:"ul"},"Features: Includes tutorial component link for guidance"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Filter Dialog")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Purpose: Apply advanced filters to the image list"),(0,l.kt)("li",{parentName:"ul"},"Fields:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Image Name (text search)"),(0,l.kt)("li",{parentName:"ul"},"Image Digest (text search)"),(0,l.kt)("li",{parentName:"ul"},"Job ID (text search)"),(0,l.kt)("li",{parentName:"ul"},"Creation Date Range (start and end dates)"),(0,l.kt)("li",{parentName:"ul"},"Status (dropdown: Building, Built, Failed, Local)"),(0,l.kt)("li",{parentName:"ul"},"Branch Name (text)"),(0,l.kt)("li",{parentName:"ul"},"Git Commit (text)"),(0,l.kt)("li",{parentName:"ul"},"Owner Email (text)"))),(0,l.kt)("li",{parentName:"ul"},"Actions: Apply Filters, Clear All"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Delete/Cancel Confirmation Dialog")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Purpose: Confirm deletion of built images or cancellation of active builds"),(0,l.kt)("li",{parentName:"ul"},"Content: Displays image name and confirmation message"),(0,l.kt)("li",{parentName:"ul"},"Actions: Close, Delete/Cancel (with loading indicator)"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Image Build Job Details Panel")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Purpose: View comprehensive details about a specific build"),(0,l.kt)("li",{parentName:"ul"},"Content:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Image name, ID, and owner at the top"),(0,l.kt)("li",{parentName:"ul"},"Status indicator"),(0,l.kt)("li",{parentName:"ul"},"Creation timestamp"),(0,l.kt)("li",{parentName:"ul"},"Image digest (copyable)"),(0,l.kt)("li",{parentName:"ul"},"Image tags (as chips)"),(0,l.kt)("li",{parentName:"ul"},"Full image URL for pulling (copyable)"),(0,l.kt)("li",{parentName:"ul"},"Dockerfile path (copyable)"),(0,l.kt)("li",{parentName:"ul"},"Git repository URL (copyable)"),(0,l.kt)("li",{parentName:"ul"},"Git branch name (copyable)"),(0,l.kt)("li",{parentName:"ul"},"Git commit ID (copyable)"))),(0,l.kt)("li",{parentName:"ul"},"Actions:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Open in Harbor (for completed builds)"),(0,l.kt)("li",{parentName:"ul"},"Historical Logs (Grafana link)"),(0,l.kt)("li",{parentName:"ul"},"Back button to return to table")))))),(0,l.kt)("h3",{id:"actions-menu"},"Actions Menu"),(0,l.kt)("p",null,"Each image build has an Actions dropdown menu with the following options:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Open in Harbor")," (only for Built/Local images)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Opens the Harbor registry interface showing the specific image artifact"),(0,l.kt)("li",{parentName:"ul"},"Provides access to security scanning, tags, and pull commands"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Clone")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Creates a duplicate build configuration"),(0,l.kt)("li",{parentName:"ul"},"Opens the Build Docker Image dialog pre-filled with all settings"),(0,l.kt)("li",{parentName:"ul"},"Allows quick creation of similar images with modifications"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Convert To EC")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Transforms the image into an Environment Config"),(0,l.kt)("li",{parentName:"ul"},"Navigates to Environment Configs panel with pre-populated fields"),(0,l.kt)("li",{parentName:"ul"},"Includes image URL, description, and readme (if available)"))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Delete/Cancel")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"For active builds (Building status): Cancels the build job"),(0,l.kt)("li",{parentName:"ul"},"For completed builds: Deletes both the build record and Harbor image artifact"),(0,l.kt)("li",{parentName:"ul"},"Requires confirmation before execution")))),(0,l.kt)("h2",{id:"technical-details"},"Technical Details"),(0,l.kt)("h3",{id:"graphql-operations"},"GraphQL Operations"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Queries:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getImageBuilderJobs")," - Retrieves paginated list of image builder jobs with filtering, ordered by pinned status then creation date"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"countImageBuilderJobs")," - Gets total count of jobs matching filter criteria for pagination"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"searchImageBuilderJobs")," - Full-text search across image builder jobs by search term"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GetImageBuildJobVcServerDocument")," - Fetches Git repository details for a specific build job"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"GetImageBuildJobDescriptionDocument")," - Retrieves description and readme metadata for EC conversion"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"getImageBuilderLogs")," - Fetches build logs for live log viewing")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Mutations:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"createImageBuilderJob")," - Initiates a new container image build with specified Git source and Dockerfile"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"deleteImageandImageBuilderJob")," - Removes build job record and deletes corresponding Harbor image artifact"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"updateOneImageBuilderJob")," (via pinImageBuildJob) - Toggles pin status for a build job")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Subscriptions:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None (uses polling with 30-second interval for status updates)")),(0,l.kt)("h3",{id:"component-structure"},"Component Structure"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Main Component: ",(0,l.kt)("inlineCode",{parentName:"li"},"/components/ImageBuilder/ImageBuilderPanel.tsx")),(0,l.kt)("li",{parentName:"ul"},"Table Component: ",(0,l.kt)("inlineCode",{parentName:"li"},"/components/ImageBuilder/ImageBuilderTable.tsx")),(0,l.kt)("li",{parentName:"ul"},"Create Dialog: ",(0,l.kt)("inlineCode",{parentName:"li"},"/components/ImageBuilder/ImageBuilderCreate.tsx")),(0,l.kt)("li",{parentName:"ul"},"Details Panel: ",(0,l.kt)("inlineCode",{parentName:"li"},"/components/ImageBuilder/ImageBuildJobDetailDialog.tsx")),(0,l.kt)("li",{parentName:"ul"},"Action Menu: ",(0,l.kt)("inlineCode",{parentName:"li"},"/components/ImageBuilder/ImageBuilderActionMenu.tsx")),(0,l.kt)("li",{parentName:"ul"},"Filter Dialog: ",(0,l.kt)("inlineCode",{parentName:"li"},"/components/ImageBuilder/ImageBuildTableFilterDialog.tsx")),(0,l.kt)("li",{parentName:"ul"},"Live Log Viewer: ",(0,l.kt)("inlineCode",{parentName:"li"},"/components/ImageBuilder/ImageBuilderLiveLog.tsx")),(0,l.kt)("li",{parentName:"ul"},"Search Results: ",(0,l.kt)("inlineCode",{parentName:"li"},"/components/Search/ContainerImagesSearchResults.tsx"))),(0,l.kt)("h3",{id:"state-management-jotai-atoms"},"State Management (Jotai Atoms)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ImageBuildJobsPanelSectionAtom")," - Controls view toggle between table and details ('table' | 'details')"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ImageBuilderJobsTablePageAtom")," - Manages pagination state (current page number)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ImageBuilderJobFiltersAtom")," - Stores active filter criteria"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ImageBuilderJobsDataLoadingAtom")," - Tracks loading state for UI feedback"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"JobsDetailsValueAtom")," - Holds currently selected job for details view"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ImageBuilderOpenCreateDialogAtom")," - Controls visibility of create dialog"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ImageBuilderCloneDefaultValuesAtom")," - Stores values for cloning operations")),(0,l.kt)("h2",{id:"common-workflows"},"Common Workflows"),(0,l.kt)("h3",{id:"building-a-new-container-image"},"Building a New Container Image"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},'Click "Create a Container Image" button (disabled if Harbor is not installed)'),(0,l.kt)("li",{parentName:"ol"},'Enter an image name (e.g., "custom-python-env")'),(0,l.kt)("li",{parentName:"ol"},'Add one or more tags by typing and pressing Enter (e.g., "v1.0", "latest")'),(0,l.kt)("li",{parentName:"ol"},"Select a Git repository from the dropdown"),(0,l.kt)("li",{parentName:"ol"},"Specify the branch name (defaults to branch from repository config)"),(0,l.kt)("li",{parentName:"ol"},"Optionally specify a commit hash (uses branch HEAD if blank)"),(0,l.kt)("li",{parentName:"ol"},'Enter the relative path to your Dockerfile (e.g., "./docker/Dockerfile" or "./Dockerfile")'),(0,l.kt)("li",{parentName:"ol"},'Click "Create" to start the build job'),(0,l.kt)("li",{parentName:"ol"},"Monitor build progress in the table with live status updates"),(0,l.kt)("li",{parentName:"ol"},"View live logs by clicking the log icon for active builds"),(0,l.kt)("li",{parentName:"ol"},"Once completed (status: Built), the image is available in Harbor")),(0,l.kt)("h3",{id:"cloning-and-modifying-an-existing-image"},"Cloning and Modifying an Existing Image"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Locate the image you want to clone in the table"),(0,l.kt)("li",{parentName:"ol"},'Click the "Actions" dropdown button for that image'),(0,l.kt)("li",{parentName:"ol"},'Select "Clone" from the menu'),(0,l.kt)("li",{parentName:"ol"},"The Build Docker Image dialog opens with all fields pre-filled"),(0,l.kt)("li",{parentName:"ol"},"Modify any fields as needed (e.g., change tags, update commit, or adjust image name)"),(0,l.kt)("li",{parentName:"ol"},'Click "Create" to build the modified image'),(0,l.kt)("li",{parentName:"ol"},"The new build appears in the table as a separate entry")),(0,l.kt)("h3",{id:"converting-an-image-to-an-environment-config"},"Converting an Image to an Environment Config"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Locate a successfully built image (status: Built or Local)"),(0,l.kt)("li",{parentName:"ol"},'Click the "Actions" dropdown for that image'),(0,l.kt)("li",{parentName:"ol"},'Select "Convert To EC" from the menu'),(0,l.kt)("li",{parentName:"ol"},"You are automatically redirected to the Environment Configs panel"),(0,l.kt)("li",{parentName:"ol"},"The image URL is pre-populated in the EC creation form"),(0,l.kt)("li",{parentName:"ol"},"Complete any additional EC configuration (name, description, resource limits, etc.)"),(0,l.kt)("li",{parentName:"ol"},"Save the EC to make it available for Sessions, Jobs, and Microservices")),(0,l.kt)("h3",{id:"filtering-and-finding-images"},"Filtering and Finding Images"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Click the filter button in the table toolbar"),(0,l.kt)("li",{parentName:"ol"},"Set one or more filter criteria:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Search by image name or digest"),(0,l.kt)("li",{parentName:"ul"},"Filter by build status (Building, Built, Failed)"),(0,l.kt)("li",{parentName:"ul"},"Specify creation date range"),(0,l.kt)("li",{parentName:"ul"},"Filter by Git branch or commit"),(0,l.kt)("li",{parentName:"ul"},"Filter by owner email"))),(0,l.kt)("li",{parentName:"ol"},'Click "Apply Filters"'),(0,l.kt)("li",{parentName:"ol"},"Active filters appear as chips below the toolbar"),(0,l.kt)("li",{parentName:"ol"},"Click the X on any chip to remove that specific filter"),(0,l.kt)("li",{parentName:"ol"},'Click "Reset Filters" to clear all filters at once'),(0,l.kt)("li",{parentName:"ol"},"Use the quick search field for real-time filtering across image names and digests")),(0,l.kt)("h3",{id:"viewing-detailed-build-information"},"Viewing Detailed Build Information"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Click on any image name in the table (appears as a blue link)"),(0,l.kt)("li",{parentName:"ol"},"The details panel slides in showing comprehensive build information"),(0,l.kt)("li",{parentName:"ol"},"Review all metadata, Git source details, and image identifiers"),(0,l.kt)("li",{parentName:"ol"},"Copy any field value using the copy button"),(0,l.kt)("li",{parentName:"ol"},'Click "Open in Harbor" to view the image in Harbor\'s web interface'),(0,l.kt)("li",{parentName:"ol"},'Click "Historical Logs" to view complete build logs in Grafana'),(0,l.kt)("li",{parentName:"ol"},'Click "Back" to return to the table view')),(0,l.kt)("h3",{id:"deleting-or-canceling-builds"},"Deleting or Canceling Builds"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"For active builds, click Actions \u2192 Cancel to stop the build in progress"),(0,l.kt)("li",{parentName:"ol"},"For completed builds, click Actions \u2192 Delete to remove the build record and Harbor artifact"),(0,l.kt)("li",{parentName:"ol"},"Confirm the action in the dialog that appears"),(0,l.kt)("li",{parentName:"ol"},"The image is removed from the table and deleted from Harbor registry")),(0,l.kt)("h2",{id:"related-features"},"Related Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/git-repositories"},"Git Repositories")," - Configure Git repositories used as source for image builds"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/environment-configs"},"Environment Configs")," - Use built images as base containers for workloads"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/stack-components"},"Stack Components")," - Harbor registry component must be installed and active"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/sessions"},"Sessions")," - Use custom Environment Configs with built images for development sessions"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/jobs"},"Immediate Jobs")," - Run workloads using custom container images"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/developer-docs/features/services"},"Microservices")," - Deploy microservices with custom-built images")),(0,l.kt)("h2",{id:"notes--tips"},"Notes & Tips"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Harbor Dependency"),': The Container Images feature requires Harbor registry to be installed and in ACTIVE status. If Harbor is not available, the "Create a Container Image" button will be disabled with a tooltip explaining the requirement.')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Image Hierarchy"),": The table groups builds by image name, allowing you to see the history of builds for each image. Expand an image name to see all historical builds sorted by date (newest first).")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Tag Strategy"),": Use meaningful tags like version numbers (v1.0, v2.0) or environment indicators (dev, staging, prod) to organize your images. Multiple tags can be applied to the same build.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Commit Specificity"),": Specifying a commit hash ensures reproducible builds. If omitted, the build uses the HEAD of the specified branch, which may change over time.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Dockerfile Paths"),": The Dockerfile path is relative to the Git repository root. Common paths include ",(0,l.kt)("inlineCode",{parentName:"p"},"./Dockerfile"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"./docker/Dockerfile"),", or ",(0,l.kt)("inlineCode",{parentName:"p"},"./path/to/custom.Dockerfile"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Build Monitoring"),": Builds are automatically polled every 30 seconds for status updates. For real-time monitoring, use the live log viewer available for active builds.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Image URLs"),": Built images are stored in Harbor at ",(0,l.kt)("inlineCode",{parentName:"p"},"harbor.{domain}/in-cluster-image-builder/{imageName}@{digest}"),". Use this full URL when referencing the image in Environment Configs or direct Docker pulls.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Security Scanning"),': After builds complete, Harbor automatically performs security vulnerability scanning on images. Access these reports through the "Open in Harbor" action.')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Pin for Quick Access"),": Pin frequently used or important images to keep them at the top of the table, making them easier to find when working with many images.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"EC Conversion Benefits"),": Converting images to Environment Configs allows them to be used throughout Shakudo with proper resource management, access control, and metadata tracking.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Search Integration"),": Container images are indexed in the global platform search (Cmd/Ctrl+K). Search results show image name, tags, Dockerfile source, owner, and creation date.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Filtering Persistence"),": Filters can be saved in the URL query parameters, allowing you to bookmark specific filtered views of your images.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Role-Based Filtering"),": Users without elevated permissions automatically see only their own images. Administrators and users with appropriate roles can see all images across the platform.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Tutorial Available"),": Click the video icon next to the panel title to watch a tutorial on using the Container Images feature."))))}c.isMDXComponent=!0}}]);